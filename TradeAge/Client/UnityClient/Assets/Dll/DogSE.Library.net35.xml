<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DogSE.Library.net35</name>
    </assembly>
    <members>
        <member name="T:DogSE.Library.Common.ConcurrentQueue`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:DogSE.Library.Common.ConcurrentQueue`1.Enqueue(`0)">
            <summary>
            
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:DogSE.Library.Common.ConcurrentQueue`1.TryDequeue(`0@)">
            <summary>
            
            </summary>
            <param name="returnT"></param>
            <returns></returns>
        </member>
        <member name="P:DogSE.Library.Common.ConcurrentQueue`1.Count">
            <summary>
            
            </summary>
        </member>
        <member name="T:DogSE.Library.Common.ObjectPool`1">
            <summary>
            对象池
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:DogSE.Library.Common.ObjectPool`1.m_InitialCapacity">
            <summary>
            内存池的容量
            </summary>
        </member>
        <member name="P:DogSE.Library.Common.ObjectPool`1.MaxCapacity">
            <summary>
            最大持有容量
            如果发生miss，仍然会按照初始容量去扩容
            但是，一旦发生回收，池里的数量大于最大容量，则不会再往池里丢数据
            会直接抛弃掉
            </summary>
        </member>
        <member name="F:DogSE.Library.Common.ObjectPool`1.m_FreePool">
            <summary>
            内存池
            </summary>
        </member>
        <member name="F:DogSE.Library.Common.ObjectPool`1.m_Misses">
            <summary>
            内存池的容量不足时再次请求数据的次数
            </summary>
        </member>
        <member name="M:DogSE.Library.Common.ObjectPool`1.#ctor(System.Int64,System.Int32)">
            <summary>
            初始化内存池
            </summary>
            <param name="iInitialCapacity">初始化内存池对象的数量</param>
            <param name="maxCapacity">最大容量</param>
        </member>
        <member name="M:DogSE.Library.Common.ObjectPool`1.Extend">
            <summary>
            扩展数据
            </summary>
        </member>
        <member name="M:DogSE.Library.Common.ObjectPool`1.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="M:DogSE.Library.Common.ObjectPool`1.ToString">
            <summary>
            输出对象池的一些状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Common.ObjectPool`1.#ctor(System.String,System.Int64)">
            <summary>
            初始化内存池
            </summary>
            <param name="name">对象池的名字</param>
            <param name="iInitialCapacity">初始化内存池对象的数量</param>
        </member>
        <member name="M:DogSE.Library.Common.ObjectPool`1.AcquireContent">
            <summary>
            内存池请求数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Common.ObjectPool`1.ReleaseContent(`0)">
            <summary>
            内存池释放数据
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:DogSE.Library.Common.ObjectPool`1.Free">
            <summary>
            释放内存池内全部的数据
            </summary>
        </member>
        <member name="M:DogSE.Library.Common.ObjectPool`1.GetPoolInfo">
            <summary>
            给出内存池的详细信息
            </summary>
            <returns></returns>
        </member>
        <member name="P:DogSE.Library.Common.ObjectPool`1.Name">
            <summary>
            对象池的名字
            </summary>
        </member>
        <member name="T:DogSE.Library.Common.StaticInstanceObjectPool`1">
            <summary>
            带单例模式的对象池
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:DogSE.Library.Common.StaticInstanceObjectPool`1.Instatnce">
            <summary>
            单例模式
            </summary>
        </member>
        <member name="T:DogSE.Library.Common.PoolInfo">
            <summary>
            对象池信息
            </summary>
        </member>
        <member name="P:DogSE.Library.Common.PoolInfo.FreeCount">
            <summary>
            空闲数量
            </summary>
        </member>
        <member name="P:DogSE.Library.Common.PoolInfo.AcquireCount">
            <summary>
            申请的数量
            </summary>
        </member>
        <member name="P:DogSE.Library.Common.PoolInfo.ReleaseCount">
            <summary>
            释放的数量
            </summary>
        </member>
        <member name="P:DogSE.Library.Common.PoolInfo.InitialCapacity">
            <summary>
            初始化池数量
            </summary>
        </member>
        <member name="P:DogSE.Library.Common.PoolInfo.CurrentCapacity">
            <summary>
            当前池数量
            </summary>
        </member>
        <member name="P:DogSE.Library.Common.PoolInfo.Misses">
            <summary>
            请求失败次数
            </summary>
        </member>
        <member name="P:DogSE.Library.Common.PoolInfo.Name">
            <summary>
            对象池的名字
            </summary>
        </member>
        <member name="M:DogSE.Library.Common.PoolInfo.ToString">
            <summary>
            输出当前数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:DogSE.Library.Common.IPoolInfo">
            <summary>
            对象池信息
            </summary>
        </member>
        <member name="P:DogSE.Library.Common.IPoolInfo.Name">
            <summary>
            对象池的名字
            </summary>
        </member>
        <member name="M:DogSE.Library.Common.IPoolInfo.GetPoolInfo">
            <summary>
            获得对象池信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:DogSE.Library.Common.ObjectPoolStateInfo">
            <summary>
            对象池信息
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:DogSE.Library.Common.ObjectPoolStateInfo.GetPoolInfos">
            <summary>
            获得所有内存池的信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Common.ObjectPoolStateInfo.GetPoolInfos(System.String)">
            <summary>
            获得指定名称的内存池信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:DogSE.Library.Common.StaticObjectPool`1">
            <summary>
            泛型的，静态唯一的对象池【线程安全，放心使用】
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:DogSE.Library.Common.StaticObjectPool`1.AcquireContent">
            <summary>
            内存池请求数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Common.StaticObjectPool`1.ReleaseContent(`0)">
            <summary>
            回收内存
            </summary>
            <param name="contentT"></param>
        </member>
        <member name="T:DogSE.Library.Common.TInstance`1">
            <summary>
            单例模板
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:DogSE.Library.Common.TInstance`1.Instance">
            <summary>
            单例
            </summary>
        </member>
        <member name="T:DogSE.Library.Component.ComponentManager">
            <summary>
            组件管理器的实现模式
            </summary>
        </member>
        <member name="M:DogSE.Library.Component.ComponentManager.RegisterComponent``1(System.String,``0)">
            <summary>
            注册一个组件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="componentId"></param>
            <param name="component"></param>
        </member>
        <member name="M:DogSE.Library.Component.ComponentManager.GetComponent``1(System.String)">
            <summary>
            获得一个组件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="componentId"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Component.ComponentManager.ReleaseComponent``1">
            <summary>
            释放组件资源
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:DogSE.Library.Component.ComponentManager.Clear">
            <summary>
            清理所有数据（为GC用，注意使用场所）
            </summary>
        </member>
        <member name="T:DogSE.Library.Component.IComponentManager">
            <summary>
            组件模式模块
            </summary>
        </member>
        <member name="M:DogSE.Library.Component.IComponentManager.RegisterComponent``1(System.String,``0)">
            <summary>
            注册一个组件数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="componentId">组件ID</param>
            <param name="component">组件实例（非空）</param>
        </member>
        <member name="M:DogSE.Library.Component.IComponentManager.GetComponent``1(System.String)">
            <summary>
            获得一个组件数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="componentId">组件ID</param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Component.IComponentManager.ReleaseComponent``1">
            <summary>
            释放组件的资源
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:DogSE.Library.Log.ConsoleAppender">
            <summary>
            控制台日志输出
            </summary>
            <remarks>
            虽然这里实现的是实例的接口
            但控制台只有一个，因此这边的数据都是写入一个静态的列表
            </remarks>
        </member>
        <member name="F:DogSE.Library.Log.ConsoleAppender.s_LogInfoQueue">
            <summary>
            当前需要处理的集合
            </summary>
        </member>
        <member name="F:DogSE.Library.Log.ConsoleAppender.s_LockLogInfoQueue">
            <summary>
            日志操作的锁
            </summary>
        </member>
        <member name="F:DogSE.Library.Log.ConsoleAppender.s_IsLock">
            <summary>
            
            </summary>
        </member>
        <member name="M:DogSE.Library.Log.ConsoleAppender.Write(DogSE.Library.Log.LogInfo)">
            <summary>
            写日志（可以多线程操作）
            </summary>
            <param name="info"></param>
        </member>
        <member name="F:DogSE.Library.Log.ConsoleAppender.level">
            <summary>
            日志等级
            </summary>
        </member>
        <member name="P:DogSE.Library.Log.ConsoleAppender.Level">
            <summary>
            日志等级
            </summary>
        </member>
        <member name="F:DogSE.Library.Log.ConsoleAppender.s_strInput">
            <summary>
            
            </summary>
        </member>
        <member name="F:DogSE.Library.Log.ConsoleAppender.s_strDosPrompt">
            <summary>
            
            </summary>
        </member>
        <member name="M:DogSE.Library.Log.ConsoleAppender.InternalWriteLine(DogSE.Library.Log.LogMessageType,System.String)">
            <summary>
            
            </summary>
            <param name="messageFlag"></param>
            <param name="strFormat"></param>
        </member>
        <member name="M:DogSE.Library.Log.ConsoleAppender.InternalWriteLine(DogSE.Library.Log.LogMessageType,System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="messageFlag"></param>
            <param name="strFormat"></param>
            <param name="arg"></param>
        </member>
        <member name="T:DogSE.Library.Log.ILogAppender">
            <summary>
            日志输出的适配器，所有需要接管日志输入的都需要实现这个接口
            </summary>
        </member>
        <member name="M:DogSE.Library.Log.ILogAppender.Write(DogSE.Library.Log.LogInfo)">
            <summary>
            输出日志
            </summary>
            <param name="info"></param>
        </member>
        <member name="P:DogSE.Library.Log.ILogAppender.Level">
            <summary>
            日志等级
            </summary>
        </member>
        <member name="T:DogSE.Library.Log.ILog">
            <summary>
            日志组件的接口
            </summary>
        </member>
        <member name="M:DogSE.Library.Log.ILog.Debug(System.String)">
            <summary>
            输出Debug信息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:DogSE.Library.Log.ILog.Debug(System.String,System.Object[])">
            <summary>
            输出Debug信息
            </summary>
            <param name="format"></param>
            <param name="param"></param>
        </member>
        <member name="M:DogSE.Library.Log.ILog.Info(System.String)">
            <summary>
            输出Info信息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:DogSE.Library.Log.ILog.Info(System.String,System.Object[])">
            <summary>
            输出Info信息
            </summary>
            <param name="format"></param>
            <param name="param"></param>
        </member>
        <member name="M:DogSE.Library.Log.ILog.Warn(System.String)">
            <summary>
            输出Warn信息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:DogSE.Library.Log.ILog.Warn(System.String,System.Object[])">
            <summary>
            输出Warn信息
            </summary>
            <param name="format"></param>
            <param name="param"></param>
        </member>
        <member name="M:DogSE.Library.Log.ILog.Error(System.String)">
            <summary>
            输出Error信息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:DogSE.Library.Log.ILog.Error(System.String,System.Object[])">
            <summary>
            输出Error信息
            </summary>
            <param name="format"></param>
            <param name="param"></param>
        </member>
        <member name="M:DogSE.Library.Log.ILog.Error(System.String,System.Exception)">
            <summary>
            输出Error信息
            </summary>
            <param name="str"></param>
            <param name="ex"></param>
        </member>
        <member name="M:DogSE.Library.Log.ILog.Error(System.String,System.String,System.Exception)">
            <summary>
            输出Error信息
            </summary>
            <param name="str"></param>
            <param name="ex"></param>
            <param name="param1"></param>
        </member>
        <member name="M:DogSE.Library.Log.ILog.Error(System.String,System.String,System.String,System.Exception)">
            <summary>
            输出Error信息
            </summary>
            <param name="str"></param>
            <param name="ex"></param>
            <param name="param1"></param>
            <param name="param2"></param>
        </member>
        <member name="M:DogSE.Library.Log.ILog.Error(System.String,System.String,System.String,System.String,System.Exception)">
            <summary>
            输出Error信息
            </summary>
            <param name="str"></param>
            <param name="ex"></param>
            <param name="param1"></param>
            <param name="param2"></param>
            <param name="param3"></param>
        </member>
        <member name="P:DogSE.Library.Log.ILog.Level">
            <summary>
            日志记录等级
            </summary>
        </member>
        <member name="T:DogSE.Library.Log.LogInfo">
            <summary>
            日志信息
            </summary>
        </member>
        <member name="M:DogSE.Library.Log.LogInfo.#ctor(DogSE.Library.Log.LogMessageType,System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="messageFlag"></param>
            <param name="strFormat"></param>
            <param name="parameter"></param>
        </member>
        <member name="F:DogSE.Library.Log.LogInfo.m_messageFlag">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Log.LogInfo.MessageFlag">
            <summary>
            日志标记
            </summary>
        </member>
        <member name="F:DogSE.Library.Log.LogInfo.format">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Log.LogInfo.Format">
            <summary>
            日志信息（格式）
            </summary>
        </member>
        <member name="F:DogSE.Library.Log.LogInfo._parameter">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Log.LogInfo.Parameter">
            <summary>
            如果 format带格式，这里为参数
            </summary>
        </member>
        <member name="M:DogSE.Library.Log.LogInfo.ToString">
            <summary>
            输出定义好的格式化字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:DogSE.Library.Log.LogMessageType">
            <summary>
            日志的输出等级
            </summary>
        </member>
        <member name="F:DogSE.Library.Log.LogMessageType.MSG_NONE">
            <summary>
            空
            </summary>
        </member>
        <member name="F:DogSE.Library.Log.LogMessageType.MSG_STATUS">
            <summary>
            状态
            </summary>
        </member>
        <member name="F:DogSE.Library.Log.LogMessageType.MSG_SQL">
            <summary>
            sql 日志
            </summary>
        </member>
        <member name="F:DogSE.Library.Log.LogMessageType.MSG_DEBUG">
            <summary>
            调试
            </summary>
        </member>
        <member name="F:DogSE.Library.Log.LogMessageType.MSG_INFO">
            <summary>
            信息
            </summary>
        </member>
        <member name="F:DogSE.Library.Log.LogMessageType.MSG_NOTICE">
            <summary>
            通知
            </summary>
        </member>
        <member name="F:DogSE.Library.Log.LogMessageType.MSG_WARNING">
            <summary>
            警告
            </summary>
        </member>
        <member name="F:DogSE.Library.Log.LogMessageType.MSG_ERROR">
            <summary>
            错误
            </summary>
        </member>
        <member name="F:DogSE.Library.Log.LogMessageType.MSG_FATALERROR">
            <summary>
            致命错误
            </summary>
        </member>
        <member name="F:DogSE.Library.Log.LogMessageType.MSG_HACK">
            <summary>
            ??
            </summary>
        </member>
        <member name="F:DogSE.Library.Log.LogMessageType.MSG_LOAD">
            <summary>
            初始化
            </summary>
        </member>
        <member name="F:DogSE.Library.Log.LogMessageType.MSG_INPUT">
            <summary>
            输入
            </summary>
        </member>
        <member name="F:DogSE.Library.Log.LogMessageType.MSG_DOS_PROMPT">
            <summary>
            Dos窗口输出
            </summary>
        </member>
        <member name="T:DogSE.Library.Log.Logs">
            <summary>
            线程安全的日志
            </summary>
        </member>
        <member name="M:DogSE.Library.Log.Logs.Debug(System.String)">
            <summary>
            输出Debug信息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:DogSE.Library.Log.Logs.Debug(System.String,System.Object[])">
            <summary>
            输出Debug信息
            </summary>
            <param name="format"></param>
            <param name="param"></param>
        </member>
        <member name="M:DogSE.Library.Log.Logs.Info(System.String)">
            <summary>
            输出Info信息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:DogSE.Library.Log.Logs.Info(System.String,System.Object[])">
            <summary>
            输出Info信息
            </summary>
            <param name="format"></param>
            <param name="param"></param>
        </member>
        <member name="M:DogSE.Library.Log.Logs.Warn(System.String)">
            <summary>
            输出Warn信息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:DogSE.Library.Log.Logs.Warn(System.String,System.Object[])">
            <summary>
            输出Warn信息
            </summary>
            <param name="format"></param>
            <param name="param"></param>
        </member>
        <member name="M:DogSE.Library.Log.Logs.Error(System.String)">
            <summary>
            输出Error信息
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:DogSE.Library.Log.Logs.Error(System.String,System.String)">
            <summary>
            输出Error信息
            </summary>
            <param name="format"></param>
            <param name="param"></param>
        </member>
        <member name="M:DogSE.Library.Log.Logs.Error(System.String,System.Int32)">
            <summary>
            输出Error信息
            </summary>
            <param name="format"></param>
            <param name="param"></param>
        </member>
        <member name="M:DogSE.Library.Log.Logs.Error(System.String,System.Exception)">
            <summary>
            输出Error信息
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:DogSE.Library.Log.Logs.Error(System.String,System.String,System.String)">
            <summary>
            输出Error信息
            </summary>
            <param name="message"></param>
            <param name="param2"></param>
            <param name="param1"></param>
        </member>
        <member name="M:DogSE.Library.Log.Logs.Error(System.String,System.String,System.String,System.String)">
            <summary>
            输出Error信息
            </summary>
            <param name="message"></param>
            <param name="param2"></param>
            <param name="param1"></param>
            <param name="param3"></param>
        </member>
        <member name="M:DogSE.Library.Log.Logs.Error(System.String,System.String,System.Exception)">
            <summary>
            输出Error信息
            </summary>
            <param name="message"></param>
            <param name="param1"></param>
            <param name="ex"></param>
        </member>
        <member name="M:DogSE.Library.Log.Logs.Error(System.String,System.String,System.String,System.Exception)">
            <summary>
            输出Error信息
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
            <param name="param1"></param>
            <param name="param2"></param>
        </member>
        <member name="M:DogSE.Library.Log.Logs.Error(System.String,System.String,System.String,System.String,System.Exception)">
            <summary>
            输出Error信息
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
            <param name="param1"></param>
            <param name="param2"></param>
            <param name="param3"></param>
        </member>
        <member name="M:DogSE.Library.Log.Logs.WriteLine(DogSE.Library.Log.LogMessageType,System.String)">
            <summary>
            防止多线程的问题
            </summary>
            <param name="messageFlag"></param>
            <param name="strFormat"></param>
        </member>
        <member name="M:DogSE.Library.Log.Logs.WriteLine(DogSE.Library.Log.LogMessageType,System.String,System.Object[])">
            <summary>
            防止多线程的问题
            </summary>
            <param name="messageFlag"></param>
            <param name="strFormat"></param>
            <param name="arg"></param>
        </member>
        <member name="M:DogSE.Library.Log.Logs.AddAppender(DogSE.Library.Log.ILogAppender)">
            <summary>
            添加日志的输出适配器
            </summary>
            <param name="appender"></param>
        </member>
        <member name="M:DogSE.Library.Log.Logs.RemoveAppender(DogSE.Library.Log.ILogAppender)">
            <summary>
            删除某个日志输出适配器
            </summary>
            <param name="appender"></param>
        </member>
        <member name="M:DogSE.Library.Log.Logs.GetMessageType``1">
            <summary>
            获得某个适配器类型的日志输出等级
            </summary>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Log.Logs.SetMessageLevel``1(DogSE.Library.Log.LogMessageType)">
            <summary>
            设置某个适配器的日志输出等级
            </summary>
            <typeparam name="TLogAppender"></typeparam>
            <param name="level"></param>
        </member>
        <member name="M:DogSE.Library.Log.Logs.ParseLogMessageType(System.String)">
            <summary>
            将一个字符串抓换为日志的输出类型
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Log.Logs.SetLogLevel(System.String)">
            <summary>
            设置log等级
            该设置会把所有的日志输出按照一个等级来操作
            </summary>
            <param name="logLevel"></param>
        </member>
        <member name="M:DogSE.Library.Log.Logs.AddConsoleAppender">
            <summary>
            添加一个控制台的适配器
            </summary>
        </member>
        <member name="T:DogSE.Library.Maths.IPoint2D">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.IPoint2D.X">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.IPoint2D.Y">
            <summary>
            
            </summary>
        </member>
        <member name="T:DogSE.Library.Maths.IPoint3D">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.IPoint3D.Z">
            <summary>
            
            </summary>
        </member>
        <member name="T:DogSE.Library.Maths.IDirection">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.IDirection.Direction">
            <summary>
            
            </summary>
        </member>
        <member name="T:DogSE.Library.Maths.ILocation">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.ILocation.Location">
            <summary>
            
            </summary>
        </member>
        <member name="T:DogSE.Library.Maths.IInitialize">
            <summary>
            当前脚本类需初始化实例
            </summary>
        </member>
        <member name="T:DogSE.Library.Maths.IConfigure">
            <summary>
            当前脚本类需配置化实例
            </summary>
        </member>
        <member name="T:DogSE.Library.Maths.IRelease">
            <summary>
            当前类的有内存池,可释放自己入内存池
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.IRelease.Release">
            <summary>
            
            </summary>
        </member>
        <member name="T:DogSE.Library.Maths.ILock">
            <summary>
            当前类实例的在多线程中需锁定
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.ILock.Lock">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.ILock.Free">
            <summary>
            
            </summary>
        </member>
        <member name="T:DogSE.Library.Maths.MathHelper">
            <summary>
            Contains commonly used precalculated values.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.MathHelper.E">
            <summary>
            Represents the mathematical constant e.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.MathHelper.Log10E">
            <summary>
            Represents the log base ten of e.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.MathHelper.Log2E">
            <summary>
            Represents the log base two of e.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.MathHelper.Pi">
            <summary>
            Represents the value of pi.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.MathHelper.PiOver2">
            <summary>
            Represents the value of pi divided by two.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.MathHelper.PiOver4">
            <summary>
            Represents the value of pi divided by four.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.MathHelper.TwoPi">
            <summary>
            Represents the value of pi times two.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.MathHelper.Barycentric(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns the Cartesian coordinate for one axis of a point that is defined by a given triangle and two normalized barycentric (areal) coordinates.
            </summary>
            <param name="value1">The coordinate on one axis of vertex 1 of the defining triangle.</param>
            <param name="value2">The coordinate on the same axis of vertex 2 of the defining triangle.</param>
            <param name="value3">The coordinate on the same axis of vertex 3 of the defining triangle.</param>
            <param name="amount1">The normalized barycentric (areal) coordinate b2, equal to the weighting factor for vertex 2, the coordinate of which is specified in value2.</param>
            <param name="amount2">The normalized barycentric (areal) coordinate b3, equal to the weighting factor for vertex 3, the coordinate of which is specified in value3.</param>
        </member>
        <member name="M:DogSE.Library.Maths.MathHelper.CatmullRom(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Performs a Catmull-Rom interpolation using the specified positions.
            </summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
        </member>
        <member name="M:DogSE.Library.Maths.MathHelper.Clamp(System.Single,System.Single,System.Single)">
            <summary>
            Restricts a value to be within a specified range. Reference page contains links to related code samples.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value. If value is less than min, min will be returned.</param>
            <param name="max">The maximum value. If value is greater than max, max will be returned.</param>
        </member>
        <member name="M:DogSE.Library.Maths.MathHelper.Distance(System.Single,System.Single)">
            <summary>
            Calculates the absolute value of the difference of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.MathHelper.Hermite(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Performs a Hermite spline interpolation.
            </summary>
            <param name="value1">Source position.</param>
            <param name="tangent1">Source tangent.</param>
            <param name="value2">Source position.</param>
            <param name="tangent2">Source tangent.</param>
            <param name="amount">Weighting factor.</param>
        </member>
        <member name="M:DogSE.Library.Maths.MathHelper.Lerp(System.Single,System.Single,System.Single)">
            <summary>
            Linearly interpolates between two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of value2.</param>
        </member>
        <member name="M:DogSE.Library.Maths.MathHelper.Max(System.Single,System.Single)">
            <summary>
            Returns the greater of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.MathHelper.Min(System.Single,System.Single)">
            <summary>
            Returns the lesser of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.MathHelper.SmoothStep(System.Single,System.Single,System.Single)">
            <summary>
            Interpolates between two values using a cubic equation.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <param name="amount">Weighting value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.MathHelper.ToDegrees(System.Single)">
            <summary>
            Converts radians to degrees.
            </summary>
            <param name="radians">The angle in radians.</param>
        </member>
        <member name="M:DogSE.Library.Maths.MathHelper.ToRadians(System.Single)">
            <summary>
            Converts degrees to radians.
            </summary>
            <param name="degrees">The angle in degrees.</param>
        </member>
        <member name="M:DogSE.Library.Maths.MathHelper.WrapAngle(System.Single)">
            <summary>
            Reduces a given angle to a value between π and -π.
            </summary>
            <param name="angle">The angle to reduce, in radians.</param>
        </member>
        <member name="T:DogSE.Library.Maths.Matrix">
            <summary>
            Defines a matrix.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Matrix.M11">
            <summary>
            Value at row 1 column 1 of the matrix.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Matrix.M12">
            <summary>
            Value at row 1 column 2 of the matrix.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Matrix.M13">
            <summary>
            Value at row 1 column 3 of the matrix.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Matrix.M14">
            <summary>
            Value at row 1 column 4 of the matrix.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Matrix.M21">
            <summary>
            Value at row 2 column 1 of the matrix.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Matrix.M22">
            <summary>
            Value at row 2 column 2 of the matrix.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Matrix.M23">
            <summary>
            Value at row 2 column 3 of the matrix.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Matrix.M24">
            <summary>
            Value at row 2 column 4 of the matrix.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Matrix.M31">
            <summary>
            Value at row 3 column 1 of the matrix.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Matrix.M32">
            <summary>
            Value at row 3 column 2 of the matrix.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Matrix.M33">
            <summary>
            Value at row 3 column 3 of the matrix.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Matrix.M34">
            <summary>
            Value at row 3 column 4 of the matrix.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Matrix.M41">
            <summary>
            Value at row 4 column 1 of the matrix.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Matrix.M42">
            <summary>
            Value at row 4 column 2 of the matrix.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Matrix.M43">
            <summary>
            Value at row 4 column 3 of the matrix.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Matrix.M44">
            <summary>
            Value at row 4 column 4 of the matrix.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of Matrix.
            </summary>
            <param name="m11">Value to initialize m11 to.</param>
            <param name="m12">Value to initialize m12 to.</param>
            <param name="m13">Value to initialize m13 to.</param>
            <param name="m14">Value to initialize m14 to.</param>
            <param name="m21">Value to initialize m21 to.</param>
            <param name="m22">Value to initialize m22 to.</param>
            <param name="m23">Value to initialize m23 to.</param>
            <param name="m24">Value to initialize m24 to.</param>
            <param name="m31">Value to initialize m31 to.</param>
            <param name="m32">Value to initialize m32 to.</param>
            <param name="m33">Value to initialize m33 to.</param>
            <param name="m34">Value to initialize m34 to.</param>
            <param name="m41">Value to initialize m41 to.</param>
            <param name="m42">Value to initialize m42 to.</param>
            <param name="m43">Value to initialize m43 to.</param>
            <param name="m44">Value to initialize m44 to.</param>
        </member>
        <member name="P:DogSE.Library.Maths.Matrix.Up">
            <summary>
            Gets and sets the up vector of the Matrix.
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Matrix.Down">
            <summary>
            Gets and sets the down vector of the Matrix.
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Matrix.Right">
            <summary>
            Gets and sets the right vector of the Matrix.
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Matrix.Left">
            <summary>
            Gets and sets the left vector of the Matrix.
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Matrix.Forward">
            <summary>
            Gets and sets the forward vector of the Matrix.
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Matrix.Backward">
            <summary>
            Gets and sets the backward vector of the Matrix.
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Matrix.Translation">
            <summary>
            Gets and sets the translation vector of the Matrix.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Matrix.m_Identity">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Matrix.Identity">
            <summary>
            Returns an instance of the identity matrix.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateBillboard(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3,System.Nullable{DogSE.Library.Maths.Vector3})">
            <summary>
            Creates a spherical billboard that rotates around a specified object position.
            </summary>
            <param name="objectPosition">Position of the object the billboard will rotate around.</param>
            <param name="cameraPosition">Position of the camera.</param>
            <param name="cameraUpVector">The up vector of the camera.</param>
            <param name="cameraForwardVector">Optional forward vector of the camera.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateBillboard(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,System.Nullable{DogSE.Library.Maths.Vector3},DogSE.Library.Maths.Matrix@)">
            <summary>
            Creates a spherical billboard that rotates around a specified object position.
            </summary>
            <param name="objectPosition">Position of the object the billboard will rotate around.</param>
            <param name="cameraPosition">Position of the camera.</param>
            <param name="cameraUpVector">The up vector of the camera.</param>
            <param name="cameraForwardVector">Optional forward vector of the camera.</param>
            <param name="result">[OutAttribute] The created billboard matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateConstrainedBillboard(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3,System.Nullable{DogSE.Library.Maths.Vector3},System.Nullable{DogSE.Library.Maths.Vector3})">
            <summary>
            Creates a cylindrical billboard that rotates around a specified axis.
            </summary>
            <param name="objectPosition">Position of the object the billboard will rotate around.</param>
            <param name="cameraPosition">Position of the camera.</param>
            <param name="rotateAxis">Axis to rotate the billboard around.</param>
            <param name="cameraForwardVector">Optional forward vector of the camera.</param>
            <param name="objectForwardVector">Optional forward vector of the object.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateConstrainedBillboard(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,System.Nullable{DogSE.Library.Maths.Vector3},System.Nullable{DogSE.Library.Maths.Vector3},DogSE.Library.Maths.Matrix@)">
            <summary>
            Creates a cylindrical billboard that rotates around a specified axis.
            </summary>
            <param name="objectPosition">Position of the object the billboard will rotate around.</param>
            <param name="cameraPosition">Position of the camera.</param>
            <param name="rotateAxis">Axis to rotate the billboard around.</param>
            <param name="cameraForwardVector">Optional forward vector of the camera.</param>
            <param name="objectForwardVector">Optional forward vector of the object.</param>
            <param name="result">[OutAttribute] The created billboard matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateTranslation(DogSE.Library.Maths.Vector3)">
            <summary>
            Creates a translation Matrix.
            </summary>
            <param name="position">Amounts to translate by on the x, y, and z axes.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateTranslation(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Matrix@)">
            <summary>
            Creates a translation Matrix.
            </summary>
            <param name="position">Amounts to translate by on the x, y, and z axes.</param>
            <param name="result">[OutAttribute] The created translation Matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateTranslation(System.Single,System.Single,System.Single)">
            <summary>
            Creates a translation Matrix.
            </summary>
            <param name="xPosition">Value to translate by on the x-axis.</param>
            <param name="yPosition">Value to translate by on the y-axis.</param>
            <param name="zPosition">Value to translate by on the z-axis.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateTranslation(System.Single,System.Single,System.Single,DogSE.Library.Maths.Matrix@)">
            <summary>
            Creates a translation Matrix.
            </summary>
            <param name="xPosition">Value to translate by on the x-axis.</param>
            <param name="yPosition">Value to translate by on the y-axis.</param>
            <param name="zPosition">Value to translate by on the z-axis.</param>
            <param name="result">[OutAttribute] The created translation Matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateScale(System.Single,System.Single,System.Single)">
            <summary>
            Creates a scaling Matrix.
            </summary>
            <param name="xScale">Value to scale by on the x-axis.</param>
            <param name="yScale">Value to scale by on the y-axis.</param>
            <param name="zScale">Value to scale by on the z-axis.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateScale(System.Single,System.Single,System.Single,DogSE.Library.Maths.Matrix@)">
            <summary>
            Creates a scaling Matrix.
            </summary>
            <param name="xScale">Value to scale by on the x-axis.</param>
            <param name="yScale">Value to scale by on the y-axis.</param>
            <param name="zScale">Value to scale by on the z-axis.</param>
            <param name="result">[OutAttribute] The created scaling Matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateScale(DogSE.Library.Maths.Vector3)">
            <summary>
            Creates a scaling Matrix.
            </summary>
            <param name="scales">Amounts to scale by on the x, y, and z axes.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateScale(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Matrix@)">
            <summary>
            Creates a scaling Matrix.
            </summary>
            <param name="scales">Amounts to scale by on the x, y, and z axes.</param>
            <param name="result">[OutAttribute] The created scaling Matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateScale(System.Single)">
            <summary>
            Creates a scaling Matrix.
            </summary>
            <param name="scale">Amount to scale by.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateScale(System.Single,DogSE.Library.Maths.Matrix@)">
            <summary>
            Creates a scaling Matrix.
            </summary>
            <param name="scale">Value to scale by.</param>
            <param name="result">[OutAttribute] The created scaling Matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateRotationX(System.Single)">
            <summary>
            Returns a matrix that can be used to rotate a set of vertices around the x-axis.
            </summary>
            <param name="radians">The amount, in radians, in which to rotate around the x-axis. Note that you can use ToRadians to convert degrees to radians.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateRotationX(System.Single,DogSE.Library.Maths.Matrix@)">
            <summary>
            Populates data into a user-specified matrix that can be used to rotate a set of vertices around the x-axis.
            </summary>
            <param name="radians">The amount, in radians, in which to rotate around the x-axis. Note that you can use ToRadians to convert degrees to radians.</param>
            <param name="result">[OutAttribute] The matrix in which to place the calculated data.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateRotationY(System.Single)">
            <summary>
            Returns a matrix that can be used to rotate a set of vertices around the y-axis.
            </summary>
            <param name="radians">The amount, in radians, in which to rotate around the y-axis. Note that you can use ToRadians to convert degrees to radians.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateRotationY(System.Single,DogSE.Library.Maths.Matrix@)">
            <summary>
            Populates data into a user-specified matrix that can be used to rotate a set of vertices around the y-axis.
            </summary>
            <param name="radians">The amount, in radians, in which to rotate around the y-axis. Note that you can use ToRadians to convert degrees to radians.</param>
            <param name="result">[OutAttribute] The matrix in which to place the calculated data.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateRotationZ(System.Single)">
            <summary>
            Returns a matrix that can be used to rotate a set of vertices around the z-axis.
            </summary>
            <param name="radians">The amount, in radians, in which to rotate around the z-axis. Note that you can use ToRadians to convert degrees to radians.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateRotationZ(System.Single,DogSE.Library.Maths.Matrix@)">
            <summary>
            Populates data into a user-specified matrix that can be used to rotate a set of vertices around the z-axis.
            </summary>
            <param name="radians">The amount, in radians, in which to rotate around the z-axis. Note that you can use ToRadians to convert degrees to radians.</param>
            <param name="result">[OutAttribute] The rotation matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateFromAxisAngle(DogSE.Library.Maths.Vector3,System.Single)">
            <summary>
            Creates a new Matrix that rotates around an arbitrary vector.
            </summary>
            <param name="axis">The axis to rotate around.</param>
            <param name="angle">The angle to rotate around the vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateFromAxisAngle(DogSE.Library.Maths.Vector3@,System.Single,DogSE.Library.Maths.Matrix@)">
            <summary>
            Creates a new Matrix that rotates around an arbitrary vector.
            </summary>
            <param name="axis">The axis to rotate around.</param>
            <param name="angle">The angle to rotate around the vector.</param>
            <param name="result">[OutAttribute] The created Matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Builds a perspective projection matrix based on a field of view and returns by value.
            </summary>
            <param name="fieldOfView">Field of view in the y direction, in radians.</param>
            <param name="aspectRatio">Aspect ratio, defined as view space width divided by height. To match the aspect ratio of the viewport, the property AspectRatio.</param>
            <param name="nearPlaneDistance">Distance to the near view plane.</param>
            <param name="farPlaneDistance">Distance to the far view plane.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreatePerspectiveFieldOfView(System.Single,System.Single,System.Single,System.Single,DogSE.Library.Maths.Matrix@)">
            <summary>
            Builds a perspective projection matrix based on a field of view and returns by reference.
            </summary>
            <param name="fieldOfView">Field of view in the y direction, in radians.</param>
            <param name="aspectRatio">Aspect ratio, defined as view space width divided by height. To match the aspect ratio of the viewport, the property AspectRatio.</param>
            <param name="nearPlaneDistance">Distance to the near view plane.</param>
            <param name="farPlaneDistance">Distance to the far view plane.</param>
            <param name="result">[OutAttribute] The perspective projection matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Builds a perspective projection matrix and returns the result by value.
            </summary>
            <param name="width">Width of the view volume at the near view plane.</param>
            <param name="height">Height of the view volume at the near view plane.</param>
            <param name="nearPlaneDistance">Distance to the near view plane.</param>
            <param name="farPlaneDistance">Distance to the far view plane.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreatePerspective(System.Single,System.Single,System.Single,System.Single,DogSE.Library.Maths.Matrix@)">
            <summary>
            Builds a perspective projection matrix and returns the result by reference.
            </summary>
            <param name="width">Width of the view volume at the near view plane.</param>
            <param name="height">Height of the view volume at the near view plane.</param>
            <param name="nearPlaneDistance">Distance to the near view plane.</param>
            <param name="farPlaneDistance">Distance to the far view plane.</param>
            <param name="result">[OutAttribute] The projection matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Builds a customized, perspective projection matrix.
            </summary>
            <param name="left">Minimum x-value of the view volume at the near view plane.</param>
            <param name="right">Maximum x-value of the view volume at the near view plane.</param>
            <param name="bottom">Minimum y-value of the view volume at the near view plane.</param>
            <param name="top">Maximum y-value of the view volume at the near view plane.</param>
            <param name="nearPlaneDistance">Distance to the near view plane.</param>
            <param name="farPlaneDistance">Distance to of the far view plane.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreatePerspectiveOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,DogSE.Library.Maths.Matrix@)">
            <summary>
            Builds a customized, perspective projection matrix.
            </summary>
            <param name="left">Minimum x-value of the view volume at the near view plane.</param>
            <param name="right">Maximum x-value of the view volume at the near view plane.</param>
            <param name="bottom">Minimum y-value of the view volume at the near view plane.</param>
            <param name="top">Maximum y-value of the view volume at the near view plane.</param>
            <param name="nearPlaneDistance">Distance to the near view plane.</param>
            <param name="farPlaneDistance">Distance to of the far view plane.</param>
            <param name="result">[OutAttribute] The created projection matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Builds an orthogonal projection matrix.
            </summary>
            <param name="width">Width of the view volume.</param>
            <param name="height">Height of the view volume.</param>
            <param name="zNearPlane">Minimum z-value of the view volume.</param>
            <param name="zFarPlane">Maximum z-value of the view volume.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateOrthographic(System.Single,System.Single,System.Single,System.Single,DogSE.Library.Maths.Matrix@)">
            <summary>
            Builds an orthogonal projection matrix.
            </summary>
            <param name="width">Width of the view volume.</param>
            <param name="height">Height of the view volume.</param>
            <param name="zNearPlane">Minimum z-value of the view volume.</param>
            <param name="zFarPlane">Maximum z-value of the view volume.</param>
            <param name="result">[OutAttribute] The projection matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Builds a customized, orthogonal projection matrix.
            </summary>
            <param name="left">Minimum x-value of the view volume.</param>
            <param name="right">Maximum x-value of the view volume.</param>
            <param name="bottom">Minimum y-value of the view volume.</param>
            <param name="top">Maximum y-value of the view volume.</param>
            <param name="zNearPlane">Minimum z-value of the view volume.</param>
            <param name="zFarPlane">Maximum z-value of the view volume.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,DogSE.Library.Maths.Matrix@)">
            <summary>
            Builds a customized, orthogonal projection matrix.
            </summary>
            <param name="left">Minimum x-value of the view volume.</param>
            <param name="right">Maximum x-value of the view volume.</param>
            <param name="bottom">Minimum y-value of the view volume.</param>
            <param name="top">Maximum y-value of the view volume.</param>
            <param name="zNearPlane">Minimum z-value of the view volume.</param>
            <param name="zFarPlane">Maximum z-value of the view volume.</param>
            <param name="result">[OutAttribute] The projection matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateLookAt(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3)">
            <summary>
            Creates a view matrix.
            </summary>
            <param name="cameraPosition">The position of the camera.</param>
            <param name="cameraTarget">The target towards which the camera is pointing.</param>
            <param name="cameraUpVector">The direction that is "up" from the camera's point of view.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateLookAt(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Matrix@)">
            <summary>
            Creates a view matrix.
            </summary>
            <param name="cameraPosition">The position of the camera.</param>
            <param name="cameraTarget">The target towards which the camera is pointing.</param>
            <param name="cameraUpVector">The direction that is "up" from the camera's point of view.</param>
            <param name="result">[OutAttribute] The created view matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateWorld(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3)">
            <summary>
            Creates a world matrix with the specified parameters.
            </summary>
            <param name="position">Position of the object. This value is used in translation operations.</param>
            <param name="forward">Forward direction of the object.</param>
            <param name="up">Upward direction of the object; usually [0, 1, 0].</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateWorld(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Matrix@)">
            <summary>
            Creates a world matrix with the specified parameters.
            </summary>
            <param name="position">Position of the object. This value is used in translation operations.</param>
            <param name="forward">Forward direction of the object.</param>
            <param name="up">Upward direction of the object; usually [0, 1, 0].</param>
            <param name="result">[OutAttribute] The created world matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateFromQuaternion(DogSE.Library.Maths.Quaternion)">
            <summary>
            Creates a rotation Matrix from a Quaternion.
            </summary>
            <param name="quaternion">Quaternion to create the Matrix from.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateFromQuaternion(DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Matrix@)">
            <summary>
            Creates a rotation Matrix from a Quaternion.
            </summary>
            <param name="quaternion">Quaternion to create the Matrix from.</param>
            <param name="result">[OutAttribute] The created Matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new rotation matrix from a specified yaw, pitch, and roll.
            </summary>
            <param name="yaw">Angle of rotation, in radians, around the y-axis.</param>
            <param name="pitch">Angle of rotation, in radians, around the x-axis.</param>
            <param name="roll">Angle of rotation, in radians, around the z-axis.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateFromYawPitchRoll(System.Single,System.Single,System.Single,DogSE.Library.Maths.Matrix@)">
            <summary>
            Fills in a rotation matrix from a specified yaw, pitch, and roll.
            </summary>
            <param name="yaw">Angle of rotation, in radians, around the y-axis.</param>
            <param name="pitch">Angle of rotation, in radians, around the x-axis.</param>
            <param name="roll">Angle of rotation, in radians, around the z-axis.</param>
            <param name="result">[OutAttribute] An existing matrix filled in to represent the specified yaw, pitch, and roll.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateShadow(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Plane)">
            <summary>
            Creates a Matrix that flattens geometry into a specified Plane as if casting a shadow from a specified light source.
            </summary>
            <param name="lightDirection">A Vector3 specifying the direction from which the light that will cast the shadow is coming.</param>
            <param name="plane">The Plane onto which the new matrix should flatten geometry so as to cast a shadow.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateShadow(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Plane@,DogSE.Library.Maths.Matrix@)">
            <summary>
            Fills in a Matrix to flatten geometry into a specified Plane as if casting a shadow from a specified light source.
            </summary>
            <param name="lightDirection">A Vector3 specifying the direction from which the light that will cast the shadow is coming.</param>
            <param name="plane">The Plane onto which the new matrix should flatten geometry so as to cast a shadow.</param>
            <param name="result">[OutAttribute] A Matrix that can be used to flatten geometry onto the specified plane from the specified direction.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateReflection(DogSE.Library.Maths.Plane)">
            <summary>
            Creates a Matrix that reflects the coordinate system about a specified Plane.
            </summary>
            <param name="value">The Plane about which to create a reflection.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.CreateReflection(DogSE.Library.Maths.Plane@,DogSE.Library.Maths.Matrix@)">
            <summary>
            Fills in an existing Matrix so that it reflects the coordinate system about a specified Plane.
            </summary>
            <param name="value">The Plane about which to create a reflection.</param>
            <param name="result">[OutAttribute] A Matrix that creates the reflection.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Transform(DogSE.Library.Maths.Matrix,DogSE.Library.Maths.Quaternion)">
            <summary>
            Transforms a Matrix by applying a Quaternion rotation.
            </summary>
            <param name="value">The Matrix to transform.</param>
            <param name="rotation">The rotation to apply, expressed as a Quaternion.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Transform(DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Matrix@)">
            <summary>
            Transforms a Matrix by applying a Quaternion rotation.
            </summary>
            <param name="value">The Matrix to transform.</param>
            <param name="rotation">The rotation to apply, expressed as a Quaternion.</param>
            <param name="result">[OutAttribute] An existing Matrix filled in with the result of the transform.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Transpose(DogSE.Library.Maths.Matrix)">
            <summary>
            Transposes the rows and columns of a matrix.
            </summary>
            <param name="matrix">Source matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Transpose(DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Matrix@)">
            <summary>
            Transposes the rows and columns of a matrix.
            </summary>
            <param name="matrix">Source matrix.</param>
            <param name="result">[OutAttribute] Transposed matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Determinant">
            <summary>
            Calculates the determinant of the matrix.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Invert(DogSE.Library.Maths.Matrix)">
            <summary>
            Calculates the inverse of a matrix.
            </summary>
            <param name="matrix">Source matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Invert(DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Matrix@)">
            <summary>
            Calculates the inverse of a matrix.
            </summary>
            <param name="matrix">The source matrix.</param>
            <param name="result">[OutAttribute] The inverse of matrix. The same matrix can be used for both arguments.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Lerp(DogSE.Library.Maths.Matrix,DogSE.Library.Maths.Matrix,System.Single)">
            <summary>
            Linearly interpolates between the corresponding values of two matrices.
            </summary>
            <param name="matrix1">Source matrix.</param>
            <param name="matrix2">Source matrix.</param>
            <param name="amount">Interpolation value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Lerp(DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Matrix@,System.Single,DogSE.Library.Maths.Matrix@)">
            <summary>
            Linearly interpolates between the corresponding values of two matrices.
            </summary>
            <param name="matrix1">Source matrix.</param>
            <param name="matrix2">Source matrix.</param>
            <param name="amount">Interpolation value.</param>
            <param name="result">[OutAttribute] Resulting matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Negate(DogSE.Library.Maths.Matrix)">
            <summary>
            Negates individual elements of a matrix.
            </summary>
            <param name="matrix">Source matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Negate(DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Matrix@)">
            <summary>
            Negates individual elements of a matrix.
            </summary>
            <param name="matrix">Source matrix.</param>
            <param name="result">[OutAttribute] Negated matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Add(DogSE.Library.Maths.Matrix,DogSE.Library.Maths.Matrix)">
            <summary>
            Adds a matrix to another matrix.
            </summary>
            <param name="matrix1">Source matrix.</param>
            <param name="matrix2">Source matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Add(DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Matrix@)">
            <summary>
            Adds a matrix to another matrix.
            </summary>
            <param name="matrix1">Source matrix.</param>
            <param name="matrix2">Source matrix.</param>
            <param name="result">[OutAttribute] Resulting matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Subtract(DogSE.Library.Maths.Matrix,DogSE.Library.Maths.Matrix)">
            <summary>
            Subtracts matrices.
            </summary>
            <param name="matrix1">Source matrix.</param>
            <param name="matrix2">Source matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Subtract(DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Matrix@)">
            <summary>
            Subtracts matrices.
            </summary>
            <param name="matrix1">Source matrix.</param>
            <param name="matrix2">Source matrix.</param>
            <param name="result">[OutAttribute] Result of the subtraction.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Multiply(DogSE.Library.Maths.Matrix,DogSE.Library.Maths.Matrix)">
            <summary>
            Multiplies a matrix by another matrix.
            </summary>
            <param name="matrix1">Source matrix.</param>
            <param name="matrix2">Source matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Multiply(DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Matrix@)">
            <summary>
            Multiplies a matrix by another matrix.
            </summary>
            <param name="matrix1">Source matrix.</param>
            <param name="matrix2">Source matrix.</param>
            <param name="result">[OutAttribute] Result of the multiplication.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Multiply(DogSE.Library.Maths.Matrix,System.Single)">
            <summary>
            Multiplies a matrix by a scalar value.
            </summary>
            <param name="matrix1">Source matrix.</param>
            <param name="scaleFactor">Scalar value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Multiply(DogSE.Library.Maths.Matrix@,System.Single,DogSE.Library.Maths.Matrix@)">
            <summary>
            Multiplies a matrix by a scalar value.
            </summary>
            <param name="matrix1">Source matrix.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">[OutAttribute] The result of the multiplication.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Divide(DogSE.Library.Maths.Matrix,DogSE.Library.Maths.Matrix)">
            <summary>
            Divides the components of a matrix by the corresponding components of another matrix.
            </summary>
            <param name="matrix1">Source matrix.</param>
            <param name="matrix2">The divisor.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Divide(DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Matrix@)">
            <summary>
            Divides the components of a matrix by the corresponding components of another matrix.
            </summary>
            <param name="matrix1">Source matrix.</param>
            <param name="matrix2">The divisor.</param>
            <param name="result">[OutAttribute] Result of the division.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Divide(DogSE.Library.Maths.Matrix,System.Single)">
            <summary>
            Divides the components of a matrix by a scalar.
            </summary>
            <param name="matrix1">Source matrix.</param>
            <param name="divider">The divisor.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Divide(DogSE.Library.Maths.Matrix@,System.Single,DogSE.Library.Maths.Matrix@)">
            <summary>
            Divides the components of a matrix by a scalar.
            </summary>
            <param name="matrix1">Source matrix.</param>
            <param name="divider">The divisor.</param>
            <param name="result">[OutAttribute] Result of the division.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.op_UnaryNegation(DogSE.Library.Maths.Matrix)">
            <summary>
            Negates individual elements of a matrix.
            </summary>
            <param name="matrix1">Source matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.op_Equality(DogSE.Library.Maths.Matrix,DogSE.Library.Maths.Matrix)">
            <summary>
            Compares a matrix for equality with another matrix.
            </summary>
            <param name="matrix1">Source matrix.</param>
            <param name="matrix2">Source matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.op_Inequality(DogSE.Library.Maths.Matrix,DogSE.Library.Maths.Matrix)">
            <summary>
            Tests a matrix for inequality with another matrix.
            </summary>
            <param name="matrix1">The matrix on the left of the equal sign.</param>
            <param name="matrix2">The matrix on the right of the equal sign.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.op_Addition(DogSE.Library.Maths.Matrix,DogSE.Library.Maths.Matrix)">
            <summary>
            Adds a matrix to another matrix.
            </summary>
            <param name="matrix1">Source matrix.</param>
            <param name="matrix2">Source matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.op_Subtraction(DogSE.Library.Maths.Matrix,DogSE.Library.Maths.Matrix)">
            <summary>
            Subtracts matrices.
            </summary>
            <param name="matrix1">Source matrix.</param>
            <param name="matrix2">Source matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.op_Multiply(DogSE.Library.Maths.Matrix,DogSE.Library.Maths.Matrix)">
            <summary>
            Multiplies a matrix by another matrix.
            </summary>
            <param name="matrix1">Source matrix.</param>
            <param name="matrix2">Source matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.op_Multiply(DogSE.Library.Maths.Matrix,System.Single)">
            <summary>
            Multiplies a matrix by a scalar value.
            </summary>
            <param name="matrix">Source matrix.</param>
            <param name="scaleFactor">Scalar value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.op_Multiply(System.Single,DogSE.Library.Maths.Matrix)">
            <summary>
            Multiplies a matrix by a scalar value.
            </summary>
            <param name="scaleFactor">Scalar value.</param>
            <param name="matrix">Source matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.op_Division(DogSE.Library.Maths.Matrix,DogSE.Library.Maths.Matrix)">
            <summary>
            Divides the components of a matrix by the corresponding components of another matrix.
            </summary>
            <param name="matrix1">Source matrix.</param>
            <param name="matrix2">The divisor.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.op_Division(DogSE.Library.Maths.Matrix,System.Single)">
            <summary>
            Divides the components of a matrix by a scalar.
            </summary>
            <param name="matrix1">Source matrix.</param>
            <param name="divider">The divisor.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.ToString">
            <summary>
            Retrieves a string representation of the current object.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a specified object.
            </summary>
            <param name="obj">Object with which to make the comparison.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.GetHashCode">
            <summary>
            Gets the hash code of this object.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Matrix.Equals(DogSE.Library.Maths.Matrix)">
            <summary>
            Determines whether the specified Object is equal to the Matrix.
            </summary>
            <param name="other">The Object to compare with the current Matrix.</param>
        </member>
        <member name="T:DogSE.Library.Maths.Plane">
            <summary>Defines a plane.</summary>
        </member>
        <member name="F:DogSE.Library.Maths.Plane.Normal">
            <summary>The normal vector of the Plane.</summary>
        </member>
        <member name="F:DogSE.Library.Maths.Plane.D">
            <summary>The distance of the Plane along its normal from the origin.</summary>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>Creates a new instance of Plane.</summary>
            <param name="a">X component of the normal defining the Plane.</param>
            <param name="b">Y component of the normal defining the Plane.</param>
            <param name="c">Z component of the normal defining the Plane.</param>
            <param name="d">Distance of the Plane along its normal from the origin.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.#ctor(DogSE.Library.Maths.Vector3,System.Single)">
            <summary>Creates a new instance of Plane.</summary>
            <param name="normal">The normal vector to the Plane.</param>
            <param name="d">The Plane's distance along its normal from the origin.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.#ctor(DogSE.Library.Maths.Vector4)">
            <summary>Creates a new instance of Plane.</summary>
            <param name="value">Vector4 with X, Y, and Z components defining the normal of the Plane. The W component defines the distance of the Plane along the normal from the origin.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.#ctor(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3)">
            <summary>Creates a new instance of Plane.</summary>
            <param name="point1">One point of a triangle defining the Plane.</param>
            <param name="point2">One point of a triangle defining the Plane.</param>
            <param name="point3">One point of a triangle defining the Plane.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.Equals(DogSE.Library.Maths.Plane)">
            <summary>Determines whether the specified Plane is equal to the Plane.</summary>
            <param name="other">The Plane to compare with the current Plane.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.Equals(System.Object)">
            <summary>Determines whether the specified Object is equal to the Plane.</summary>
            <param name="obj">The Object to compare with the current Plane.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.GetHashCode">
            <summary>Gets the hash code for this object.</summary>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.ToString">
            <summary>Returns a String that represents the current Plane.</summary>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.Normalize">
            <summary>Changes the coefficients of the Normal vector of this Plane to make it of unit length.</summary>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.Normalize(DogSE.Library.Maths.Plane)">
            <summary>Changes the coefficients of the Normal vector of a Plane to make it of unit length.</summary>
            <param name="value">The Plane to normalize.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.Normalize(DogSE.Library.Maths.Plane@,DogSE.Library.Maths.Plane@)">
            <summary>Changes the coefficients of the Normal vector of a Plane to make it of unit length.</summary>
            <param name="value">The Plane to normalize.</param>
            <param name="result">[OutAttribute] An existing plane Plane filled in with a normalized version of the specified plane.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.Transform(DogSE.Library.Maths.Plane,DogSE.Library.Maths.Matrix)">
            <summary>Transforms a normalized Plane by a Matrix.</summary>
            <param name="plane">The normalized Plane to transform. This Plane must already be normalized, so that its Normal vector is of unit length, before this method is called.</param>
            <param name="matrix">The transform Matrix to apply to the Plane.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.Transform(DogSE.Library.Maths.Plane@,DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Plane@)">
            <summary>Transforms a normalized Plane by a Matrix.</summary>
            <param name="plane">The normalized Plane to transform. This Plane must already be normalized, so that its Normal vector is of unit length, before this method is called.</param>
            <param name="matrix">The transform Matrix to apply to the Plane.</param>
            <param name="result">[OutAttribute] An existing Plane filled in with the results of applying the transform.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.Transform(DogSE.Library.Maths.Plane,DogSE.Library.Maths.Quaternion)">
            <summary>Transforms a normalized Plane by a Quaternion rotation.</summary>
            <param name="plane">The normalized Plane to transform. This Plane must already be normalized, so that its Normal vector is of unit length, before this method is called.</param>
            <param name="rotation">The Quaternion rotation to apply to the Plane.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.Transform(DogSE.Library.Maths.Plane@,DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Plane@)">
            <summary>Transforms a normalized Plane by a Quaternion rotation.</summary>
            <param name="plane">The normalized Plane to transform. This Plane must already be normalized, so that its Normal vector is of unit length, before this method is called.</param>
            <param name="rotation">The Quaternion rotation to apply to the Plane.</param>
            <param name="result">[OutAttribute] An existing Plane filled in with the results of applying the rotation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.Dot(DogSE.Library.Maths.Vector4)">
            <summary>Calculates the dot product of a specified Vector4 and this Plane.</summary>
            <param name="value">The Vector4 to multiply this Plane by.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.Dot(DogSE.Library.Maths.Vector4@,System.Single@)">
            <summary>Calculates the dot product of a specified Vector4 and this Plane.</summary>
            <param name="value">The Vector4 to multiply this Plane by.</param>
            <param name="result">[OutAttribute] The dot product of the specified Vector4 and this Plane.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.DotCoordinate(DogSE.Library.Maths.Vector3)">
            <summary>Returns the dot product of a specified Vector3 and the Normal vector of this Plane plus the distance (D) value of the Plane.</summary>
            <param name="value">The Vector3 to multiply by.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.DotCoordinate(DogSE.Library.Maths.Vector3@,System.Single@)">
            <summary>Returns the dot product of a specified Vector3 and the Normal vector of this Plane plus the distance (D) value of the Plane.</summary>
            <param name="value">The Vector3 to multiply by.</param>
            <param name="result">[OutAttribute] The resulting value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.DotNormal(DogSE.Library.Maths.Vector3)">
            <summary>Returns the dot product of a specified Vector3 and the Normal vector of this Plane.</summary>
            <param name="value">The Vector3 to multiply by.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.DotNormal(DogSE.Library.Maths.Vector3@,System.Single@)">
            <summary>Returns the dot product of a specified Vector3 and the Normal vector of this Plane.</summary>
            <param name="value">The Vector3 to multiply by.</param>
            <param name="result">[OutAttribute] The resulting dot product.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.op_Equality(DogSE.Library.Maths.Plane,DogSE.Library.Maths.Plane)">
            <summary>Determines whether two instances of Plane are equal.</summary>
            <param name="lhs">The object to the left of the equality operator.</param>
            <param name="rhs">The object to the right of the equality operator.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Plane.op_Inequality(DogSE.Library.Maths.Plane,DogSE.Library.Maths.Plane)">
            <summary>Determines whether two instances of Plane are not equal.</summary>
            <param name="lhs">The object to the left of the inequality operator.</param>
            <param name="rhs">The object to the right of the inequality operator.</param>
        </member>
        <member name="T:DogSE.Library.Maths.Point2D">
            <summary>
            
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Point2D.Zero">
            <summary>
            
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Point2D.#ctor(System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:DogSE.Library.Maths.Point2D.#ctor(DogSE.Library.Maths.IPoint2D)">
            <summary>
            
            </summary>
            <param name="point2D"></param>
        </member>
        <member name="F:DogSE.Library.Maths.Point2D.m_X">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Point2D.X">
            <summary>
            
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Point2D.m_Y">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Point2D.Y">
            <summary>
            
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Point2D.Parse(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point2D.op_Equality(DogSE.Library.Maths.Point2D,DogSE.Library.Maths.Point2D)">
            <summary>
            
            </summary>
            <param name="xCompare"></param>
            <param name="yCompare"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point2D.op_Inequality(DogSE.Library.Maths.Point2D,DogSE.Library.Maths.Point2D)">
            <summary>
            
            </summary>
            <param name="xCompare"></param>
            <param name="yCompare"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point2D.op_Equality(DogSE.Library.Maths.Point2D,DogSE.Library.Maths.IPoint2D)">
            <summary>
            
            </summary>
            <param name="xCompare"></param>
            <param name="yCompare"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point2D.op_Inequality(DogSE.Library.Maths.Point2D,DogSE.Library.Maths.IPoint2D)">
            <summary>
            
            </summary>
            <param name="xCompare"></param>
            <param name="yCompare"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point2D.op_GreaterThan(DogSE.Library.Maths.Point2D,DogSE.Library.Maths.Point2D)">
            <summary>
            
            </summary>
            <param name="xCompare"></param>
            <param name="yCompare"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point2D.op_GreaterThan(DogSE.Library.Maths.Point2D,DogSE.Library.Maths.IPoint2D)">
            <summary>
            
            </summary>
            <param name="xCompare"></param>
            <param name="yCompare"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point2D.op_LessThan(DogSE.Library.Maths.Point2D,DogSE.Library.Maths.Point2D)">
            <summary>
            
            </summary>
            <param name="xCompare"></param>
            <param name="yCompare"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point2D.op_LessThan(DogSE.Library.Maths.Point2D,DogSE.Library.Maths.IPoint2D)">
            <summary>
            
            </summary>
            <param name="xCompare"></param>
            <param name="yCompare"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point2D.op_GreaterThanOrEqual(DogSE.Library.Maths.Point2D,DogSE.Library.Maths.Point2D)">
            <summary>
            
            </summary>
            <param name="xCompare"></param>
            <param name="yCompare"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point2D.op_GreaterThanOrEqual(DogSE.Library.Maths.Point2D,DogSE.Library.Maths.IPoint2D)">
            <summary>
            
            </summary>
            <param name="xCompare"></param>
            <param name="yCompare"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point2D.op_LessThanOrEqual(DogSE.Library.Maths.Point2D,DogSE.Library.Maths.Point2D)">
            <summary>
            
            </summary>
            <param name="xCompare"></param>
            <param name="yCompare"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point2D.op_LessThanOrEqual(DogSE.Library.Maths.Point2D,DogSE.Library.Maths.IPoint2D)">
            <summary>
            
            </summary>
            <param name="xCompare"></param>
            <param name="yCompare"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point2D.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="xObject"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point2D.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point2D.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point2D.Equals(DogSE.Library.Maths.Point2D)">
            <summary>
            
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:DogSE.Library.Maths.Point2D.CompareTo(DogSE.Library.Maths.Point2D)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point2D.CompareTo(System.Object)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:DogSE.Library.Maths.Point3D">
            <summary>
            
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Point3D.Zero">
            <summary>
            
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Point3D.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="M:DogSE.Library.Maths.Point3D.#ctor(DogSE.Library.Maths.IPoint3D)">
            <summary>
            
            </summary>
            <param name="point3D"></param>
        </member>
        <member name="M:DogSE.Library.Maths.Point3D.#ctor(DogSE.Library.Maths.IPoint2D,System.Single)">
            <summary>
            
            </summary>
            <param name="point2D"></param>
            <param name="z"></param>
        </member>
        <member name="F:DogSE.Library.Maths.Point3D.m_X">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Point3D.X">
            <summary>
            
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Point3D.m_Y">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Point3D.Y">
            <summary>
            
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Point3D.m_Z">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Point3D.Z">
            <summary>
            
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Point3D.Parse(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point3D.op_Equality(DogSE.Library.Maths.Point3D,DogSE.Library.Maths.Point3D)">
            <summary>
            
            </summary>
            <param name="xCompare"></param>
            <param name="yCompare"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point3D.op_Equality(DogSE.Library.Maths.Point3D,DogSE.Library.Maths.IPoint3D)">
            <summary>
            
            </summary>
            <param name="xCompare"></param>
            <param name="yCompare"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point3D.op_Inequality(DogSE.Library.Maths.Point3D,DogSE.Library.Maths.Point3D)">
            <summary>
            
            </summary>
            <param name="xCompare"></param>
            <param name="yCompare"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point3D.op_Inequality(DogSE.Library.Maths.Point3D,DogSE.Library.Maths.IPoint3D)">
            <summary>
            
            </summary>
            <param name="xCompare"></param>
            <param name="yCompare"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point3D.op_Explicit(DogSE.Library.Maths.Point3D)~DogSE.Library.Maths.Point2D">
            <summary>
            
            </summary>
            <param name="point3D"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point3D.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="xObject"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point3D.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point3D.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point3D.Equals(DogSE.Library.Maths.Point3D)">
            <summary>
            
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:DogSE.Library.Maths.Point3D.CompareTo(DogSE.Library.Maths.Point3D)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Point3D.CompareTo(System.Object)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:DogSE.Library.Maths.Quaternion">
            <summary>
            Defines a four-dimensional vector (x,y,z,w), which is used to efficiently rotate an object about the (x, y, z) vector by the angle theta, where w = cos(theta/2).
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Quaternion.X">
            <summary>
            Specifies the x-value of the vector component of the quaternion.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Quaternion.Y">
            <summary>
            Specifies the y-value of the vector component of the quaternion.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Quaternion.Z">
            <summary>
            Specifies the z-value of the vector component of the quaternion.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Quaternion.W">
            <summary>
            Specifies the rotation component of the quaternion.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of Quaternion.
            </summary>
            <param name="x">The x-value of the quaternion.</param>
            <param name="y">The y-value of the quaternion.</param>
            <param name="z">The z-value of the quaternion.</param>
            <param name="w">The w-value of the quaternion.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.#ctor(DogSE.Library.Maths.Vector3,System.Single)">
            <summary>
            Initializes a new instance of Quaternion.
            </summary>
            <param name="vectorPart">The vector component of the quaternion.</param>
            <param name="scalarPart">The rotation component of the quaternion.</param>
        </member>
        <member name="F:DogSE.Library.Maths.Quaternion.m_Identity">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Quaternion.Identity">
            <summary>
            Returns a Quaternion representing no rotation.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.LengthSquared">
            <summary>
            Calculates the length squared of a Quaternion.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Length">
            <summary>
            Calculates the length of a Quaternion.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Normalize">
            <summary>
            Divides each component of the quaternion by the length of the quaternion.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Normalize(DogSE.Library.Maths.Quaternion)">
            <summary>
            Divides each component of the quaternion by the length of the quaternion.
            </summary>
            <param name="quaternion">Source quaternion.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Normalize(DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Quaternion@)">
            <summary>
            Divides each component of the quaternion by the length of the quaternion.
            </summary>
            <param name="quaternion">Source quaternion.</param>
            <param name="result">[OutAttribute] Normalized quaternion.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Conjugate">
            <summary>
            Transforms this Quaternion into its conjugate.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Conjugate(DogSE.Library.Maths.Quaternion)">
            <summary>
            Returns the conjugate of a specified Quaternion.
            </summary>
            <param name="value">The Quaternion of which to return the conjugate.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Conjugate(DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Quaternion@)">
            <summary>
            Returns the conjugate of a specified Quaternion.
            </summary>
            <param name="value">The Quaternion of which to return the conjugate.</param>
            <param name="result">[OutAttribute] An existing Quaternion filled in to be the conjugate of the specified one.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Inverse(DogSE.Library.Maths.Quaternion)">
            <summary>
            Returns the inverse of a Quaternion.
            </summary>
            <param name="quaternion">Source Quaternion.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Inverse(DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Quaternion@)">
            <summary>
            Returns the inverse of a Quaternion.
            </summary>
            <param name="quaternion">Source Quaternion.</param>
            <param name="result">[OutAttribute] The inverse of the Quaternion.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.CreateFromAxisAngle(DogSE.Library.Maths.Vector3,System.Single)">
            <summary>
            Creates a Quaternion from a vector and an angle to rotate about the vector.
            </summary>
            <param name="axis">The vector to rotate around.</param>
            <param name="angle">The angle to rotate around the vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.CreateFromAxisAngle(DogSE.Library.Maths.Vector3@,System.Single,DogSE.Library.Maths.Quaternion@)">
            <summary>
            Creates a Quaternion from a vector and an angle to rotate about the vector.
            </summary>
            <param name="axis">The vector to rotate around.</param>
            <param name="angle">The angle to rotate around the vector.</param>
            <param name="result">[OutAttribute] The created Quaternion.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new Quaternion from specified yaw, pitch, and roll angles.
            </summary>
            <param name="yaw">The yaw angle, in radians, around the y-axis.</param>
            <param name="pitch">The pitch angle, in radians, around the x-axis.</param>
            <param name="roll">The roll angle, in radians, around the z-axis.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single,DogSE.Library.Maths.Quaternion@)">
            <summary>
            Creates a new Quaternion from specified yaw, pitch, and roll angles.
            </summary>
            <param name="yaw">The yaw angle, in radians, around the y-axis.</param>
            <param name="pitch">The pitch angle, in radians, around the x-axis.</param>
            <param name="roll">The roll angle, in radians, around the z-axis.</param>
            <param name="result">[OutAttribute] An existing Quaternion filled in to express the specified yaw, pitch, and roll angles.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.CreateFromRotationMatrix(DogSE.Library.Maths.Matrix)">
            <summary>
            Creates a Quaternion from a rotation Matrix.
            </summary>
            <param name="matrix">The rotation Matrix to create the Quaternion from.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.CreateFromRotationMatrix(DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Quaternion@)">
            <summary>
            Creates a Quaternion from a rotation Matrix.
            </summary>
            <param name="matrix">The rotation Matrix to create the Quaternion from.</param>
            <param name="result">[OutAttribute] The created Quaternion.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Dot(DogSE.Library.Maths.Quaternion,DogSE.Library.Maths.Quaternion)">
            <summary>
            Calculates the dot product of two Quaternions.
            </summary>
            <param name="quaternion1">Source Quaternion.</param>
            <param name="quaternion2">Source Quaternion.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Dot(DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Quaternion@,System.Single@)">
            <summary>
            Calculates the dot product of two Quaternions.
            </summary>
            <param name="quaternion1">Source Quaternion.</param>
            <param name="quaternion2">Source Quaternion.</param>
            <param name="result">[OutAttribute] Dot product of the Quaternions.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Slerp(DogSE.Library.Maths.Quaternion,DogSE.Library.Maths.Quaternion,System.Single)">
            <summary>
            Interpolates between two quaternions, using spherical linear interpolation.
            </summary>
            <param name="quaternion1">Source quaternion.</param>
            <param name="quaternion2">Source quaternion.</param>
            <param name="amount">Value that indicates how far to interpolate between the quaternions.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Slerp(DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Quaternion@,System.Single,DogSE.Library.Maths.Quaternion@)">
            <summary>
            Interpolates between two quaternions, using spherical linear interpolation.
            </summary>
            <param name="quaternion1">Source quaternion.</param>
            <param name="quaternion2">Source quaternion.</param>
            <param name="amount">Value that indicates how far to interpolate between the quaternions.</param>
            <param name="result">[OutAttribute] Result of the interpolation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Lerp(DogSE.Library.Maths.Quaternion,DogSE.Library.Maths.Quaternion,System.Single)">
            <summary>
            Linearly interpolates between two quaternions.
            </summary>
            <param name="quaternion1">Source quaternion.</param>
            <param name="quaternion2">Source quaternion.</param>
            <param name="amount">Value indicating how far to interpolate between the quaternions.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Lerp(DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Quaternion@,System.Single,DogSE.Library.Maths.Quaternion@)">
            <summary>
            Linearly interpolates between two quaternions.
            </summary>
            <param name="quaternion1">Source quaternion.</param>
            <param name="quaternion2">Source quaternion.</param>
            <param name="amount">Value indicating how far to interpolate between the quaternions.</param>
            <param name="result">[OutAttribute] The resulting quaternion.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Concatenate(DogSE.Library.Maths.Quaternion,DogSE.Library.Maths.Quaternion)">
            <summary>
            Concatenates two Quaternions; the result represents the value1 rotation followed by the value2 rotation.
            </summary>
            <param name="value1">The first Quaternion rotation in the series.</param>
            <param name="value2">The second Quaternion rotation in the series.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Concatenate(DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Quaternion@)">
            <summary>
            Concatenates two Quaternions; the result represents the value1 rotation followed by the value2 rotation.
            </summary>
            <param name="value1">The first Quaternion rotation in the series.</param>
            <param name="value2">The second Quaternion rotation in the series.</param>
            <param name="result">[OutAttribute] The Quaternion rotation representing the concatenation of value1 followed by value2.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Negate(DogSE.Library.Maths.Quaternion)">
            <summary>
            Flips the sign of each component of the quaternion.
            </summary>
            <param name="quaternion">Source quaternion.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Negate(DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Quaternion@)">
            <summary>
            Flips the sign of each component of the quaternion.
            </summary>
            <param name="quaternion">Source quaternion.</param>
            <param name="result">[OutAttribute] Negated quaternion.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Add(DogSE.Library.Maths.Quaternion,DogSE.Library.Maths.Quaternion)">
            <summary>
            Adds two Quaternions.
            </summary>
            <param name="quaternion1">Quaternion to add.</param>
            <param name="quaternion2">Quaternion to add.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Add(DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Quaternion@)">
            <summary>
            Adds two Quaternions.
            </summary>
            <param name="quaternion1">Quaternion to add.</param>
            <param name="quaternion2">Quaternion to add.</param>
            <param name="result">[OutAttribute] Result of adding the Quaternions.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Subtract(DogSE.Library.Maths.Quaternion,DogSE.Library.Maths.Quaternion)">
            <summary>
            Subtracts a quaternion from another quaternion.
            </summary>
            <param name="quaternion1">Source quaternion.</param>
            <param name="quaternion2">Source quaternion.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Subtract(DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Quaternion@)">
            <summary>
            Subtracts a quaternion from another quaternion.
            </summary>
            <param name="quaternion1">Source quaternion.</param>
            <param name="quaternion2">Source quaternion.</param>
            <param name="result">[OutAttribute] Result of the subtraction.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Multiply(DogSE.Library.Maths.Quaternion,DogSE.Library.Maths.Quaternion)">
            <summary>
            Multiplies two quaternions.
            </summary>
            <param name="quaternion1">The quaternion on the left of the multiplication.</param>
            <param name="quaternion2">The quaternion on the right of the multiplication.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Multiply(DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Quaternion@)">
            <summary>
            Multiplies two quaternions.
            </summary>
            <param name="quaternion1">The quaternion on the left of the multiplication.</param>
            <param name="quaternion2">The quaternion on the right of the multiplication.</param>
            <param name="result">[OutAttribute] The result of the multiplication.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Multiply(DogSE.Library.Maths.Quaternion,System.Single)">
            <summary>
            Multiplies a quaternion by a scalar value.
            </summary>
            <param name="quaternion1">Source quaternion.</param>
            <param name="scaleFactor">Scalar value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Multiply(DogSE.Library.Maths.Quaternion@,System.Single,DogSE.Library.Maths.Quaternion@)">
            <summary>
            Multiplies a quaternion by a scalar value.
            </summary>
            <param name="quaternion1">Source quaternion.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">[OutAttribute] The result of the multiplication.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Divide(DogSE.Library.Maths.Quaternion,DogSE.Library.Maths.Quaternion)">
            <summary>
            Divides a Quaternion by another Quaternion.
            </summary>
            <param name="quaternion1">Source Quaternion.</param>
            <param name="quaternion2">The divisor.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Divide(DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Quaternion@)">
            <summary>
            Divides a Quaternion by another Quaternion.
            </summary>
            <param name="quaternion1">Source Quaternion.</param>
            <param name="quaternion2">The divisor.</param>
            <param name="result">[OutAttribute] Result of the division.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.op_UnaryNegation(DogSE.Library.Maths.Quaternion)">
            <summary>
            Flips the sign of each component of the quaternion.
            </summary>
            <param name="quaternion">Source quaternion.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.op_Equality(DogSE.Library.Maths.Quaternion,DogSE.Library.Maths.Quaternion)">
            <summary>
            Compares two Quaternions for equality.
            </summary>
            <param name="quaternion1">Source Quaternion.</param>
            <param name="quaternion2">Source Quaternion.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.op_Inequality(DogSE.Library.Maths.Quaternion,DogSE.Library.Maths.Quaternion)">
            <summary>
            Compare two Quaternions for inequality.
            </summary>
            <param name="quaternion1">Source Quaternion.</param>
            <param name="quaternion2">Source Quaternion.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.op_Addition(DogSE.Library.Maths.Quaternion,DogSE.Library.Maths.Quaternion)">
            <summary>
            Adds two Quaternions.
            </summary>
            <param name="quaternion1">Quaternion to add.</param>
            <param name="quaternion2">Quaternion to add.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.op_Subtraction(DogSE.Library.Maths.Quaternion,DogSE.Library.Maths.Quaternion)">
            <summary>
            Subtracts a quaternion from another quaternion.
            </summary>
            <param name="quaternion1">Source quaternion.</param>
            <param name="quaternion2">Source quaternion.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.op_Multiply(DogSE.Library.Maths.Quaternion,DogSE.Library.Maths.Quaternion)">
            <summary>
            Multiplies two quaternions.
            </summary>
            <param name="quaternion1">Source quaternion.</param>
            <param name="quaternion2">Source quaternion.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.op_Multiply(DogSE.Library.Maths.Quaternion,System.Single)">
            <summary>
            Multiplies a quaternion by a scalar value.
            </summary>
            <param name="quaternion1">Source quaternion.</param>
            <param name="scaleFactor">Scalar value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.op_Division(DogSE.Library.Maths.Quaternion,DogSE.Library.Maths.Quaternion)">
            <summary>
            Divides a Quaternion by another Quaternion.
            </summary>
            <param name="quaternion1">Source Quaternion.</param>
            <param name="quaternion2">The divisor.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.ToString">
            <summary>
            Retireves a string representation of the current object.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a specified object.
            </summary>
            <param name="obj">Object to make the comparison with.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.GetHashCode">
            <summary>
            Get the hash code of this object.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Quaternion.Equals(DogSE.Library.Maths.Quaternion)">
            <summary>
            Determines whether the specified Object is equal to the Quaternion.
            </summary>
            <param name="other">The Quaternion to compare with the current Quaternion.</param>
        </member>
        <member name="T:DogSE.Library.Maths.Rectangle2D">
            <summary>
            
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Rectangle2D.ZeroRectangle2D">
            <summary>
            
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Rectangle2D.m_Start">
            <summary>
            
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Rectangle2D.m_End">
            <summary>
            
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Rectangle2D.#ctor(DogSE.Library.Maths.IPoint2D,DogSE.Library.Maths.IPoint2D)">
            <summary>
            
            </summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:DogSE.Library.Maths.Rectangle2D.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="P:DogSE.Library.Maths.Rectangle2D.Start">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Rectangle2D.End">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Rectangle2D.X">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Rectangle2D.Y">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Rectangle2D.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Rectangle2D.Height">
            <summary>
            
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Rectangle2D.Parse(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Rectangle2D.SetRectangle(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:DogSE.Library.Maths.Rectangle2D.MakeHold(DogSE.Library.Maths.Rectangle2D)">
            <summary>
            与rectangle2D相交
            </summary>
            <param name="rectangle2D"></param>
        </member>
        <member name="M:DogSE.Library.Maths.Rectangle2D.Contains(DogSE.Library.Maths.Point2D)">
            <summary>
            
            </summary>
            <param name="point2D"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Rectangle2D.Contains(DogSE.Library.Maths.IPoint2D)">
            <summary>
            
            </summary>
            <param name="point2D"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Rectangle2D.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:DogSE.Library.Maths.Rectangle3D">
            <summary>
            
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Rectangle3D.m_Start">
            <summary>
            
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Rectangle3D.m_End">
            <summary>
            
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Rectangle3D.#ctor(DogSE.Library.Maths.Point3D,DogSE.Library.Maths.Point3D)">
            <summary>
            
            </summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:DogSE.Library.Maths.Rectangle3D.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="depth"></param>
        </member>
        <member name="P:DogSE.Library.Maths.Rectangle3D.Start">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Rectangle3D.End">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Rectangle3D.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Rectangle3D.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Rectangle3D.Depth">
            <summary>
            
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Rectangle3D.Parse(System.String)">
            <summary>
            没测试过
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Rectangle3D.Contains(DogSE.Library.Maths.Point3D)">
            <summary>
            
            </summary>
            <param name="point3D"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Rectangle3D.Contains(DogSE.Library.Maths.IPoint3D)">
            <summary>
            
            </summary>
            <param name="point3D"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Rectangle3D.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:DogSE.Library.Maths.Vector2">
            <summary>
            Defines a vector with two components.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector2.X">
            <summary>
            Gets or sets the x-component of the vector.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector2.Y">
            <summary>
            Gets or sets the y-component of the vector.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector2.m_Zero">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Vector2.Zero">
            <summary>
            Returns a Vector2 with all of its components set to zero.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector2.m_One">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Vector2.One">
            <summary>
            Returns a Vector2 with both of its components set to one.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector2.m_UnitX">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Vector2.UnitX">
            <summary>
            Returns the unit vector for the x-axis.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector2.m_UnitY">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Vector2.UnitY">
            <summary>
            Returns the unit vector for the y-axis.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of Vector2.
            </summary>
            <param name="x">Initial value for the x-component of the vector.</param>
            <param name="y">Initial value for the y-component of the vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.#ctor(System.Single)">
            <summary>
            Creates a new instance of Vector2.
            </summary>
            <param name="value">Value to initialize both components to.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Length">
            <summary>
            Calculates the length of the vector.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.LengthSquared">
            <summary>
            Calculates the length of the vector squared.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Normalize">
            <summary>
            Turns the current vector into a unit vector. The result is a vector one unit in length pointing in the same direction as the original vector.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Distance(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2)">
            <summary>
            Calculates the distance between two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Distance(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,System.Single@)">
            <summary>
            Calculates the distance between two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] The distance between the vectors.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.DistanceSquared(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2)">
            <summary>
            Calculates the distance between two vectors squared.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.DistanceSquared(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,System.Single@)">
            <summary>
            Calculates the distance between two vectors squared.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] The distance between the vectors squared.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Dot(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2)">
            <summary>
            Calculates the dot product of two vectors. If the two vectors are unit vectors, the dot product returns a floating point value between -1 and 1 that can be used to determine some properties of the angle between two vectors. For example, it can show whether the vectors are orthogonal, parallel, or have an acute or obtuse angle between them.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Dot(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,System.Single@)">
            <summary>
            Calculates the dot product of two vectors and writes the result to a user-specified variable. If the two vectors are unit vectors, the dot product returns a floating point value between -1 and 1 that can be used to determine some properties of the angle between two vectors. For example, it can show whether the vectors are orthogonal, parallel, or have an acute or obtuse angle between them.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] The dot product of the two vectors.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Normalize(DogSE.Library.Maths.Vector2)">
            <summary>
            Creates a unit vector from the specified vector. The result is a vector one unit in length pointing in the same direction as the original vector.
            </summary>
            <param name="value">Source Vector2.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Normalize(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@)">
            <summary>
            Creates a unit vector from the specified vector, writing the result to a user-specified variable. The result is a vector one unit in length pointing in the same direction as the original vector.
            </summary>
            <param name="value">Source vector.</param>
            <param name="result">[OutAttribute] Normalized vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Reflect(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2)">
            <summary>
            Determines the reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source vector.</param>
            <param name="normal">Normal of vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Reflect(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@)">
            <summary>
            Determines the reflect vector of the given vector and normal.
            </summary>
            <param name="vector">Source vector.</param>
            <param name="normal">Normal of vector.</param>
            <param name="result">[OutAttribute] The created reflect vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Min(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2)">
            <summary>
            Returns a vector that contains the lowest value from each matching pair of components.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Min(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@)">
            <summary>
            Returns a vector that contains the lowest value from each matching pair of components.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] The minimized vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Max(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2)">
            <summary>
            Returns a vector that contains the highest value from each matching pair of components.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Max(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@)">
            <summary>
            Returns a vector that contains the highest value from each matching pair of components.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] The maximized vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Clamp(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Clamp(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <param name="result">[OutAttribute] The clamped value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Lerp(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2,System.Single)">
            <summary>
            Performs a linear interpolation between two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of value2.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Lerp(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,System.Single,DogSE.Library.Maths.Vector2@)">
            <summary>
            Performs a linear interpolation between two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of value2.</param>
            <param name="result">[OutAttribute] The result of the interpolation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Barycentric(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2,System.Single,System.Single)">
            <summary>
            Returns a Vector2 containing the 2D Cartesian coordinates of a point specified in barycentric (areal) coordinates relative to a 2D triangle.
            </summary>
            <param name="value1">A Vector2 containing the 2D Cartesian coordinates of vertex 1 of the triangle.</param>
            <param name="value2">A Vector2 containing the 2D Cartesian coordinates of vertex 2 of the triangle.</param>
            <param name="value3">A Vector2 containing the 2D Cartesian coordinates of vertex 3 of the triangle.</param>
            <param name="amount1">Barycentric coordinate b2, which expresses the weighting factor toward vertex 2 (specified in value2).</param>
            <param name="amount2">Barycentric coordinate b3, which expresses the weighting factor toward vertex 3 (specified in value3).</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Barycentric(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,System.Single,System.Single,DogSE.Library.Maths.Vector2@)">
            <summary>
            Returns a Vector2 containing the 2D Cartesian coordinates of a point specified in barycentric (areal) coordinates relative to a 2D triangle.
            </summary>
            <param name="value1">A Vector2 containing the 2D Cartesian coordinates of vertex 1 of the triangle.</param>
            <param name="value2">A Vector2 containing the 2D Cartesian coordinates of vertex 2 of the triangle.</param>
            <param name="value3">A Vector2 containing the 2D Cartesian coordinates of vertex 3 of the triangle.</param>
            <param name="amount1">Barycentric coordinate b2, which expresses the weighting factor toward vertex 2 (specified in value2).</param>
            <param name="amount2">Barycentric coordinate b3, which expresses the weighting factor toward vertex 3 (specified in value3).</param>
            <param name="result">[OutAttribute] The 2D Cartesian coordinates of the specified point are placed in this Vector2 on exit.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.SmoothStep(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2,System.Single)">
            <summary>
            Interpolates between two values using a cubic equation.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <param name="amount">Weighting value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.SmoothStep(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,System.Single,DogSE.Library.Maths.Vector2@)">
            <summary>
            Interpolates between two values using a cubic equation.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <param name="amount">Weighting value.</param>
            <param name="result">[OutAttribute] The interpolated value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.CatmullRom(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2,System.Single)">
            <summary>
            Performs a Catmull-Rom interpolation using the specified positions.
            </summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.CatmullRom(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,System.Single,DogSE.Library.Maths.Vector2@)">
            <summary>
            Performs a Catmull-Rom interpolation using the specified positions.
            </summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">[OutAttribute] A vector that is the result of the Catmull-Rom interpolation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Hermite(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2,System.Single)">
            <summary>
            Performs a Hermite spline interpolation.
            </summary>
            <param name="value1">Source position vector.</param>
            <param name="tangent1">Source tangent vector.</param>
            <param name="value2">Source position vector.</param>
            <param name="tangent2">Source tangent vector.</param>
            <param name="amount">Weighting factor.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Hermite(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,System.Single,DogSE.Library.Maths.Vector2@)">
            <summary>
            Performs a Hermite spline interpolation.
            </summary>
            <param name="value1">Source position vector.</param>
            <param name="tangent1">Source tangent vector.</param>
            <param name="value2">Source position vector.</param>
            <param name="tangent2">Source tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">[OutAttribute] The result of the Hermite spline interpolation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Transform(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Matrix)">
            <summary>
            Transforms the vector (x, y, 0, 1) by the specified matrix.
            </summary>
            <param name="position">The source vector.</param>
            <param name="matrix">The transformation matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Transform(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Vector2@)">
            <summary>
            Transforms a Vector2 by the given Matrix.
            </summary>
            <param name="position">The source Vector2.</param>
            <param name="matrix">The transformation Matrix.</param>
            <param name="result">[OutAttribute] The Vector2 resulting from the transformation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.TransformNormal(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Matrix)">
            <summary>
            Transforms a 2D vector normal by a matrix.
            </summary>
            <param name="normal">The source vector.</param>
            <param name="matrix">The transformation matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.TransformNormal(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Vector2@)">
            <summary>
            Transforms a vector normal by a matrix.
            </summary>
            <param name="normal">The source vector.</param>
            <param name="matrix">The transformation matrix.</param>
            <param name="result">[OutAttribute] The Vector2 resulting from the transformation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Transform(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Quaternion)">
            <summary>
            Transforms a single Vector2, or the vector normal (x, y, 0, 0), by a specified Quaternion rotation.
            </summary>
            <param name="value">The vector to rotate.</param>
            <param name="rotation">The Quaternion rotation to apply.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Transform(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Vector2@)">
            <summary>
            Transforms a Vector2, or the vector normal (x, y, 0, 0), by a specified Quaternion rotation.
            </summary>
            <param name="value">The vector to rotate.</param>
            <param name="rotation">The Quaternion rotation to apply.</param>
            <param name="result">[OutAttribute] An existing Vector2 filled in with the result of the rotation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Transform(DogSE.Library.Maths.Vector2[],DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Vector2[])">
            <summary>
            Transforms an array of Vector2s by a specified Matrix.
            </summary>
            <param name="sourceArray">The array of Vector2s to transform.</param>
            <param name="matrix">The transform Matrix to apply.</param>
            <param name="destinationArray">An existing array into which the transformed Vector2s are written.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Transform(DogSE.Library.Maths.Vector2[],System.Int32,DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Vector2[],System.Int32,System.Int32)">
            <summary>
            Transforms a specified range in an array of Vector2s by a specified Matrix and places the results in a specified range in a destination array.
            </summary>
            <param name="sourceArray">The source array.</param>
            <param name="sourceIndex">The index of the first Vector2 to transform in the source array.</param>
            <param name="matrix">The Matrix to transform by.</param>
            <param name="destinationArray">The destination array into which the resulting Vector2s will be written.</param>
            <param name="destinationIndex">The index of the position in the destination array where the first result Vector2 should be written.</param>
            <param name="length">The number of Vector2s to be transformed.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.TransformNormal(DogSE.Library.Maths.Vector2[],DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Vector2[])">
            <summary>
            Transforms an array of Vector2 vector normals by a specified Matrix.
            </summary>
            <param name="sourceArray">The array of vector normals to transform.</param>
            <param name="matrix">The transform Matrix to apply.</param>
            <param name="destinationArray">An existing array into which the transformed vector normals are written.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.TransformNormal(DogSE.Library.Maths.Vector2[],System.Int32,DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Vector2[],System.Int32,System.Int32)">
            <summary>
            Transforms a specified range in an array of Vector2 vector normals by a specified Matrix and places the results in a specified range in a destination array.
            </summary>
            <param name="sourceArray">The source array.</param>
            <param name="sourceIndex">The index of the first Vector2 to transform in the source array.</param>
            <param name="matrix">The Matrix to apply.</param>
            <param name="destinationArray">The destination array into which the resulting Vector2s are written.</param>
            <param name="destinationIndex">The index of the position in the destination array where the first result Vector2 should be written.</param>
            <param name="length">The number of vector normals to be transformed.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Transform(DogSE.Library.Maths.Vector2[],DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Vector2[])">
            <summary>
            Transforms an array of Vector2s by a specified Quaternion.
            </summary>
            <param name="sourceArray">The array of Vector2s to transform.</param>
            <param name="rotation">The transform Matrix to use.</param>
            <param name="destinationArray">An existing array into which the transformed Vector2s are written.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Transform(DogSE.Library.Maths.Vector2[],System.Int32,DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Vector2[],System.Int32,System.Int32)">
            <summary>
            Transforms a specified range in an array of Vector2s by a specified Quaternion and places the results in a specified range in a destination array.
            </summary>
            <param name="sourceArray">The source array.</param>
            <param name="sourceIndex">The index of the first Vector2 to transform in the source array.</param>
            <param name="rotation">The Quaternion rotation to apply.</param>
            <param name="destinationArray">The destination array into which the resulting Vector2s are written.</param>
            <param name="destinationIndex">The index of the position in the destination array where the first result Vector2 should be written.</param>
            <param name="length">The number of Vector2s to be transformed.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Negate(DogSE.Library.Maths.Vector2)">
            <summary>
            Returns a vector pointing in the opposite direction.
            </summary>
            <param name="value">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Negate(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@)">
            <summary>
            Returns a vector pointing in the opposite direction.
            </summary>
            <param name="value">Source vector.</param>
            <param name="result">[OutAttribute] Vector pointing in the opposite direction.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Add(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Add(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] Sum of the source vectors.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Subtract(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Subtract(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] The result of the subtraction.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Multiply(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Multiply(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] The result of the multiplication.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Multiply(DogSE.Library.Maths.Vector2,System.Single)">
            <summary>
            Multiplies a vector by a scalar value.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="scaleFactor">Scalar value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Multiply(DogSE.Library.Maths.Vector2@,System.Single,DogSE.Library.Maths.Vector2@)">
            <summary>
            Multiplies a vector by a scalar value.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">[OutAttribute] The result of the multiplication.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Divide(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2)">
            <summary>
            Divides the components of a vector by the components of another vector.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Divisor vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Divide(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Vector2@)">
            <summary>
            Divides the components of a vector by the components of another vector.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">The divisor.</param>
            <param name="result">[OutAttribute] The result of the division.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Divide(DogSE.Library.Maths.Vector2,System.Single)">
            <summary>
            Divides a vector by a scalar value.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="divider">The divisor.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Divide(DogSE.Library.Maths.Vector2@,System.Single,DogSE.Library.Maths.Vector2@)">
            <summary>
            Divides a vector by a scalar value.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="divider">The divisor.</param>
            <param name="result">[OutAttribute] The result of the division.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.op_UnaryNegation(DogSE.Library.Maths.Vector2)">
            <summary>
            Returns a vector pointing in the opposite direction.
            </summary>
            <param name="value">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.op_Equality(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2)">
            <summary>
            Tests vectors for equality.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.op_Inequality(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2)">
            <summary>
            Tests vectors for inequality.
            </summary>
            <param name="value1">Vector to compare.</param>
            <param name="value2">Vector to compare.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.op_Addition(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.op_Subtraction(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.op_Multiply(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.op_Multiply(DogSE.Library.Maths.Vector2,System.Single)">
            <summary>
            Multiplies a vector by a scalar value.
            </summary>
            <param name="value">Source vector.</param>
            <param name="scaleFactor">Scalar value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.op_Multiply(System.Single,DogSE.Library.Maths.Vector2)">
            <summary>
            Multiplies a vector by a scalar value.
            </summary>
            <param name="scaleFactor">Scalar value.</param>
            <param name="value">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.op_Division(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Vector2)">
            <summary>
            Divides the components of a vector by the components of another vector.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Divisor vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.op_Division(DogSE.Library.Maths.Vector2,System.Single)">
            <summary>
            Divides a vector by a scalar value.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="divider">The divisor.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.op_Explicit(DogSE.Library.Maths.Vector3)~DogSE.Library.Maths.Vector2">
            <summary>
            
            </summary>
            <param name="vector3"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.op_Explicit(DogSE.Library.Maths.Vector4)~DogSE.Library.Maths.Vector2">
            <summary>
            
            </summary>
            <param name="vector4"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.ToString">
            <summary>
            Retrieves a string representation of the current object.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a specified object.
            </summary>
            <param name="obj">Object to make the comparison with.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.GetHashCode">
            <summary>
            Gets the hash code of the vector object.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Vector2.Equals(DogSE.Library.Maths.Vector2)">
            <summary>
            Determines whether the specified Object is equal to the Vector2.
            </summary>
            <param name="other">The Object to compare with the current Vector2.</param>
        </member>
        <member name="T:DogSE.Library.Maths.Vector3">
            <summary>
            Defines a vector with three components.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector3.X">
            <summary>
            Gets or sets the x-component of the vector.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector3.Y">
            <summary>
            Gets or sets the y-component of the vector.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector3.Z">
            <summary>
            Gets or sets the z-component of the vector.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of Vector3.
            </summary>
            <param name="x">Initial value for the x-component of the vector.</param>
            <param name="y">Initial value for the y-component of the vector.</param>
            <param name="z">Initial value for the z-component of the vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.#ctor(System.Single)">
            <summary>
            Creates a new instance of Vector3.
            </summary>
            <param name="value">Value to initialize each component to.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.#ctor(DogSE.Library.Maths.Vector2,System.Single)">
            <summary>
            Initializes a new instance of Vector3.
            </summary>
            <param name="value">A vector containing the values to initialize x and y components with.</param>
            <param name="z">Initial value for the z-component of the vector.</param>
        </member>
        <member name="F:DogSE.Library.Maths.Vector3.m_Zero">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Vector3.Zero">
            <summary>
            Returns a Vector3 with all of its components set to zero.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector3.m_One">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Vector3.One">
            <summary>
            Returns a Vector3 with ones in all of its components.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector3.m_UnitX">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Vector3.UnitX">
            <summary>
            Returns the x unit Vector3 (1, 0, 0).
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector3.m_UnitY">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Vector3.UnitY">
            <summary>
            Returns the y unit Vector3 (0, 1, 0).
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector3.m_UnitZ">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Vector3.UnitZ">
            <summary>
            Returns the z unit Vector3 (0, 0, 1).
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector3.m_Up">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Vector3.Up">
            <summary>
            Returns a unit vector designating up (0, 1, 0).
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector3.m_Down">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Vector3.Down">
            <summary>
            Returns a unit Vector3 designating down (0, −1, 0).
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector3.m_Right">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Vector3.Right">
            <summary>
            Returns a unit Vector3 pointing to the right (1, 0, 0).
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector3.m_Left">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Vector3.Left">
            <summary>
            Returns a unit Vector3 designating left (−1, 0, 0).
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector3.m_Forward">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Vector3.Forward">
            <summary>
            Returns a unit Vector3 designating forward in a right-handed coordinate system(0, 0, −1).
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector3.m_Backward">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Vector3.Backward">
            <summary>
            Returns a unit Vector3 designating backward in a right-handed coordinate system (0, 0, 1).
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Length">
            <summary>
            Calculates the length of the vector.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.LengthSquared">
            <summary>
            Calculates the length of the vector squared.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Normalize">
            <summary>
            Turns the current vector into a unit vector. The result is a vector one unit in length pointing in the same direction as the original vector.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Distance(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3)">
            <summary>
            Calculates the distance between two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Distance(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,System.Single@)">
            <summary>
            Calculates the distance between two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] The distance between the vectors.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.DistanceSquared(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3)">
            <summary>
            Calculates the distance between two vectors squared.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.DistanceSquared(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,System.Single@)">
            <summary>
            Calculates the distance between two vectors squared.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] The distance between the two vectors squared.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Dot(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3)">
            <summary>
            Calculates the dot product of two vectors. If the two vectors are unit vectors, the dot product returns a floating point value between -1 and 1 that can be used to determine some properties of the angle between two vectors. For example, it can show whether the vectors are orthogonal, parallel, or have an acute or obtuse angle between them.
            </summary>
            <param name="vector1">Source vector.</param>
            <param name="vector2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Dot(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,System.Single@)">
            <summary>
            Calculates the dot product of two vectors and writes the result to a user-specified variable. If the two vectors are unit vectors, the dot product returns a floating point value between -1 and 1 that can be used to determine some properties of the angle between two vectors. For example, it can show whether the vectors are orthogonal, parallel, or have an acute or obtuse angle between them.
            </summary>
            <param name="vector1">Source vector.</param>
            <param name="vector2">Source vector.</param>
            <param name="result">[OutAttribute] The dot product of the two vectors.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Normalize(DogSE.Library.Maths.Vector3)">
            <summary>
            Creates a unit vector from the specified vector. The result is a vector one unit in length pointing in the same direction as the original vector.
            </summary>
            <param name="value">The source Vector3.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Normalize(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@)">
            <summary>
            Creates a unit vector from the specified vector, writing the result to a user-specified variable. The result is a vector one unit in length pointing in the same direction as the original vector.
            </summary>
            <param name="value">Source vector.</param>
            <param name="result">[OutAttribute] The normalized vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Cross(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3)">
            <summary>
            Calculates the cross product of two vectors.
            </summary>
            <param name="vector1">Source vector.</param>
            <param name="vector2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Cross(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@)">
            <summary>
            Calculates the cross product of two vectors.
            </summary>
            <param name="vector1">Source vector.</param>
            <param name="vector2">Source vector.</param>
            <param name="result">[OutAttribute] The cross product of the vectors.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Reflect(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3)">
            <summary>
            Returns the reflection of a vector off a surface that has the specified normal.  Reference page contains code sample.
            </summary>
            <param name="vector">Source vector.</param>
            <param name="normal">Normal of the surface.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Reflect(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@)">
            <summary>
            Returns the reflection of a vector off a surface that has the specified normal.  Reference page contains code sample.
            </summary>
            <param name="vector">Source vector.</param>
            <param name="normal">Normal of the surface.</param>
            <param name="result">[OutAttribute] The reflected vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Min(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3)">
            <summary>
            Returns a vector that contains the lowest value from each matching pair of components.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Min(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@)">
            <summary>
            Returns a vector that contains the lowest value from each matching pair of components.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] The minimized vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Max(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3)">
            <summary>
            Returns a vector that contains the highest value from each matching pair of components.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Max(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@)">
            <summary>
            Returns a vector that contains the highest value from each matching pair of components.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] The maximized vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Clamp(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Clamp(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <param name="result">[OutAttribute] The clamped value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Lerp(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3,System.Single)">
            <summary>
            Performs a linear interpolation between two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of value2.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Lerp(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,System.Single,DogSE.Library.Maths.Vector3@)">
            <summary>
            Performs a linear interpolation between two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of value2.</param>
            <param name="result">[OutAttribute] The result of the interpolation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Barycentric(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3,System.Single,System.Single)">
            <summary>
            Returns a Vector3 containing the 3D Cartesian coordinates of a point specified in Barycentric coordinates relative to a 3D triangle.
            </summary>
            <param name="value1">A Vector3 containing the 3D Cartesian coordinates of vertex 1 of the triangle.</param>
            <param name="value2">A Vector3 containing the 3D Cartesian coordinates of vertex 2 of the triangle.</param>
            <param name="value3">A Vector3 containing the 3D Cartesian coordinates of vertex 3 of the triangle.</param>
            <param name="amount1">Barycentric coordinate b2, which expresses the weighting factor toward vertex 2 (specified in value2).</param>
            <param name="amount2">Barycentric coordinate b3, which expresses the weighting factor toward vertex 3 (specified in value3).</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Barycentric(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,System.Single,System.Single,DogSE.Library.Maths.Vector3@)">
            <summary>
            Returns a Vector3 containing the 3D Cartesian coordinates of a point specified in barycentric (areal) coordinates relative to a 3D triangle.
            </summary>
            <param name="value1">A Vector3 containing the 3D Cartesian coordinates of vertex 1 of the triangle.</param>
            <param name="value2">A Vector3 containing the 3D Cartesian coordinates of vertex 2 of the triangle.</param>
            <param name="value3">A Vector3 containing the 3D Cartesian coordinates of vertex 3 of the triangle.</param>
            <param name="amount1">Barycentric coordinate b2, which expresses the weighting factor toward vertex 2 (specified in value2).</param>
            <param name="amount2">Barycentric coordinate b3, which expresses the weighting factor toward vertex 3 (specified in value3).</param>
            <param name="result">[OutAttribute] The 3D Cartesian coordinates of the specified point are placed in this Vector3 on exit.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.SmoothStep(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3,System.Single)">
            <summary>
            Interpolates between two values using a cubic equation.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <param name="amount">Weighting value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.SmoothStep(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,System.Single,DogSE.Library.Maths.Vector3@)">
            <summary>
            Interpolates between two values using a cubic equation.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="amount">Weighting value.</param>
            <param name="result">[OutAttribute] The interpolated value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.CatmullRom(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3,System.Single)">
            <summary>
            Performs a Catmull-Rom interpolation using the specified positions.
            </summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.CatmullRom(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,System.Single,DogSE.Library.Maths.Vector3@)">
            <summary>
            Performs a Catmull-Rom interpolation using the specified positions.
            </summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">[OutAttribute] A vector that is the result of the Catmull-Rom interpolation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Hermite(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3,System.Single)">
            <summary>
            Performs a Hermite spline interpolation.
            </summary>
            <param name="value1">Source position vector.</param>
            <param name="tangent1">Source tangent vector.</param>
            <param name="value2">Source position vector.</param>
            <param name="tangent2">Source tangent vector.</param>
            <param name="amount">Weighting factor.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Hermite(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,System.Single,DogSE.Library.Maths.Vector3@)">
            <summary>
            Performs a Hermite spline interpolation.
            </summary>
            <param name="value1">Source position vector.</param>
            <param name="tangent1">Source tangent vector.</param>
            <param name="value2">Source position vector.</param>
            <param name="tangent2">Source tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">[OutAttribute] The result of the Hermite spline interpolation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Transform(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Matrix)">
            <summary>
            Transforms a 3D vector by the given matrix.
            </summary>
            <param name="position">The source vector.</param>
            <param name="matrix">The transformation matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Transform(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Vector3@)">
            <summary>
            Transforms a Vector3 by the given Matrix.
            </summary>
            <param name="position">The source Vector3.</param>
            <param name="matrix">The transformation Matrix.</param>
            <param name="result">[OutAttribute] The transformed vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.TransformNormal(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Matrix)">
            <summary>
            Transforms a 3D vector normal by a matrix.
            </summary>
            <param name="normal">The source vector.</param>
            <param name="matrix">The transformation matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.TransformNormal(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Vector3@)">
            <summary>
            Transforms a vector normal by a matrix.
            </summary>
            <param name="normal">The source vector.</param>
            <param name="matrix">The transformation Matrix.</param>
            <param name="result">[OutAttribute] The Vector3 resulting from the transformation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Transform(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Quaternion)">
            <summary>
            Transforms a Vector3 by a specified Quaternion rotation.
            </summary>
            <param name="value">The Vector3 to rotate.</param>
            <param name="rotation">The Quaternion rotation to apply.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Transform(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Vector3@)">
            <summary>
            Transforms a Vector3 by a specified Quaternion rotation.
            </summary>
            <param name="value">The Vector3 to rotate.</param>
            <param name="rotation">The Quaternion rotation to apply.</param>
            <param name="result">[OutAttribute] An existing Vector3 filled in with the results of the rotation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Transform(DogSE.Library.Maths.Vector3[],DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Vector3[])">
            <summary>
            Transforms a source array of Vector3s by a specified Matrix and writes the results to an existing destination array.
            </summary>
            <param name="sourceArray">The source array.</param>
            <param name="matrix">The transform Matrix to apply.</param>
            <param name="destinationArray">An existing destination array into which the transformed Vector3s are written.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Transform(DogSE.Library.Maths.Vector3[],System.Int32,DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Vector3[],System.Int32,System.Int32)">
            <summary>
            Applies a specified transform Matrix to a specified range of an array of Vector3s and writes the results into a specified range of a destination array.
            </summary>
            <param name="sourceArray">The source array.</param>
            <param name="sourceIndex">The index in the source array at which to start.</param>
            <param name="matrix">The transform Matrix to apply.</param>
            <param name="destinationArray">The existing destination array.</param>
            <param name="destinationIndex">The index in the destination array at which to start.</param>
            <param name="length">The number of Vector3s to transform.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.TransformNormal(DogSE.Library.Maths.Vector3[],DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Vector3[])">
            <summary>
            Transforms an array of 3D vector normals by a specified Matrix.
            </summary>
            <param name="sourceArray">The array of Vector3 normals to transform.</param>
            <param name="matrix">The transform matrix to apply.</param>
            <param name="destinationArray">An existing Vector3 array into which the results of the transforms are written.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.TransformNormal(DogSE.Library.Maths.Vector3[],System.Int32,DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Vector3[],System.Int32,System.Int32)">
            <summary>
            Transforms a specified range in an array of 3D vector normals by a specified Matrix and writes the results to a specified range in a destination array.
            </summary>
            <param name="sourceArray">The source array of Vector3 normals.</param>
            <param name="sourceIndex">The starting index in the source array.</param>
            <param name="matrix">The transform Matrix to apply.</param>
            <param name="destinationArray">The destination Vector3 array.</param>
            <param name="destinationIndex">The starting index in the destination array.</param>
            <param name="length">The number of vectors to transform.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Transform(DogSE.Library.Maths.Vector3[],DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Vector3[])">
            <summary>
            Transforms a source array of Vector3s by a specified Quaternion rotation and writes the results to an existing destination array.
            </summary>
            <param name="sourceArray">The source array.</param>
            <param name="rotation">The Quaternion rotation to apply.</param>
            <param name="destinationArray">An existing destination array into which the transformed Vector3s are written.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Transform(DogSE.Library.Maths.Vector3[],System.Int32,DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Vector3[],System.Int32,System.Int32)">
            <summary>
            Applies a specified Quaternion rotation to a specified range of an array of Vector3s and writes the results into a specified range of a destination array.
            </summary>
            <param name="sourceArray">The source array.</param>
            <param name="sourceIndex">The index in the source array at which to start.</param>
            <param name="rotation">The Quaternion rotation to apply.</param>
            <param name="destinationArray">The existing destination array.</param>
            <param name="destinationIndex">The index in the destination array at which to start.</param>
            <param name="length">The number of Vector3s to transform.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Negate(DogSE.Library.Maths.Vector3)">
            <summary>
            Returns a vector pointing in the opposite direction.
            </summary>
            <param name="value">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Negate(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@)">
            <summary>
            Returns a vector pointing in the opposite direction.
            </summary>
            <param name="value">Source vector.</param>
            <param name="result">[OutAttribute] Vector pointing in the opposite direction.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Add(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Add(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] Sum of the source vectors.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Subtract(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Subtract(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] The result of the subtraction.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Multiply(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Multiply(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] The result of the multiplication.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Multiply(DogSE.Library.Maths.Vector3,System.Single)">
            <summary>
            Multiplies a vector by a scalar value.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="scaleFactor">Scalar value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Multiply(DogSE.Library.Maths.Vector3@,System.Single,DogSE.Library.Maths.Vector3@)">
            <summary>
            Multiplies a vector by a scalar value.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">[OutAttribute] The result of the multiplication.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Divide(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3)">
            <summary>
            Divides the components of a vector by the components of another vector.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Divisor vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Divide(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Vector3@)">
            <summary>
            Divides the components of a vector by the components of another vector.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">The divisor.</param>
            <param name="result">[OutAttribute] The result of the division.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Divide(DogSE.Library.Maths.Vector3,System.Single)">
            <summary>
            Divides a vector by a scalar value.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">The divisor.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Divide(DogSE.Library.Maths.Vector3@,System.Single,DogSE.Library.Maths.Vector3@)">
            <summary>
            Divides a vector by a scalar value.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">The divisor.</param>
            <param name="result">[OutAttribute] The result of the division.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.op_UnaryNegation(DogSE.Library.Maths.Vector3)">
            <summary>
            Returns a vector pointing in the opposite direction.
            </summary>
            <param name="value">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.op_Equality(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3)">
            <summary>
            Tests vectors for equality.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.op_Inequality(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3)">
            <summary>
            Tests vectors for inequality.
            </summary>
            <param name="value1">Vector to compare.</param>
            <param name="value2">Vector to compare.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.op_Addition(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.op_Subtraction(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.op_Multiply(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.op_Multiply(DogSE.Library.Maths.Vector3,System.Single)">
            <summary>
            Multiplies a vector by a scalar value.
            </summary>
            <param name="value">Source vector.</param>
            <param name="scaleFactor">Scalar value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.op_Multiply(System.Single,DogSE.Library.Maths.Vector3)">
            <summary>
            Multiplies a vector by a scalar value.
            </summary>
            <param name="scaleFactor">Scalar value.</param>
            <param name="value">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.op_Division(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Vector3)">
            <summary>
            Divides the components of a vector by the components of another vector.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Divisor vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.op_Division(DogSE.Library.Maths.Vector3,System.Single)">
            <summary>
            Divides a vector by a scalar value.
            </summary>
            <param name="value">Source vector.</param>
            <param name="divider">The divisor.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.op_Explicit(DogSE.Library.Maths.Vector4)~DogSE.Library.Maths.Vector3">
            <summary>
            
            </summary>
            <param name="vector4"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.op_Explicit(DogSE.Library.Maths.Vector2)~DogSE.Library.Maths.Vector3">
            <summary>
            
            </summary>
            <param name="vector2"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.ToString">
            <summary>
            Retrieves a string representation of the current object.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a specified object.
            </summary>
            <param name="obj">Object to make the comparison with.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.GetHashCode">
            <summary>
            Gets the hash code of the vector object.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Vector3.Equals(DogSE.Library.Maths.Vector3)">
            <summary>
            Determines whether the specified Object is equal to the Vector3.
            </summary>
            <param name="other">The Vector3 to compare with the current Vector3.</param>
        </member>
        <member name="T:DogSE.Library.Maths.Vector4">
            <summary>
            Defines a vector with four components.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector4.X">
            <summary>
            Gets or sets the x-component of the vector.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector4.Y">
            <summary>
            Gets or sets the y-component of the vector.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector4.Z">
            <summary>
            Gets or sets the z-component of the vector.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector4.W">
            <summary>
            Gets or sets the w-component of the vector.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of Vector4.
            </summary>
            <param name="x">Initial value for the x-component of the vector.</param>
            <param name="y">Initial value for the y-component of the vector.</param>
            <param name="z">Initial value for the z-component of the vector.</param>
            <param name="w">Initial value for the w-component of the vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.#ctor(DogSE.Library.Maths.Vector2,System.Single,System.Single)">
            <summary>
            Initializes a new instance of Vector4.
            </summary>
            <param name="value">A vector containing the values to initialize x and y components with.</param>
            <param name="z">Initial value for the z-component of the vector.</param>
            <param name="w">Initial value for the w-component of the vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.#ctor(DogSE.Library.Maths.Vector3,System.Single)">
            <summary>
            Initializes a new instance of Vector4.
            </summary>
            <param name="value">A vector containing the values to initialize x, y, and z components with.</param>
            <param name="w">Initial value for the w-component of the vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.#ctor(System.Single)">
            <summary>
            Creates a new instance of Vector4.
            </summary>
            <param name="value">Value to initialize each component to.</param>
        </member>
        <member name="F:DogSE.Library.Maths.Vector4.m_Zero">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Vector4.Zero">
            <summary>
            Returns a Vector4 with all of its components set to zero.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector4.m_One">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Vector4.One">
            <summary>
            Returns a Vector4 with all of its components set to one.
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector4.m_UnitX">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Vector4.UnitX">
            <summary>
            Returns the Vector4 (1, 0, 0, 0).
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector4.m_UnitY">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Vector4.UnitY">
            <summary>
            Returns the Vector4 (0, 1, 0, 0).
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector4.m_UnitZ">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Vector4.UnitZ">
            <summary>
            Returns the Vector4 (0, 0, 1, 0).
            </summary>
        </member>
        <member name="F:DogSE.Library.Maths.Vector4.m_UnitW">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Maths.Vector4.UnitW">
            <summary>
            Returns the Vector4 (0, 0, 0, 1).
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Length">
            <summary>
            Calculates the length of the vector.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.LengthSquared">
            <summary>
            Calculates the length of the vector squared.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Normalize">
            <summary>
            Turns the current vector into a unit vector.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Distance(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4)">
            <summary>
            Calculates the distance between two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Distance(DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@,System.Single@)">
            <summary>
            Calculates the distance between two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] The distance between the vectors.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.DistanceSquared(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4)">
            <summary>
            Calculates the distance between two vectors squared.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.DistanceSquared(DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@,System.Single@)">
            <summary>
            Calculates the distance between two vectors squared.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] The distance between the two vectors squared.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Dot(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4)">
            <summary>
            Calculates the dot product of two vectors.
            </summary>
            <param name="vector1">Source vector.</param>
            <param name="vector2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Dot(DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@,System.Single@)">
            <summary>
            Calculates the dot product of two vectors.
            </summary>
            <param name="vector1">Source vector.</param>
            <param name="vector2">Source vector.</param>
            <param name="result">[OutAttribute] The dot product of the two vectors.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Normalize(DogSE.Library.Maths.Vector4)">
            <summary>
            Creates a unit vector from the specified vector.
            </summary>
            <param name="vector">The source Vector4.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Normalize(DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@)">
            <summary>
            Returns a normalized version of the specified vector.
            </summary>
            <param name="vector">Source vector.</param>
            <param name="result">[OutAttribute] The normalized vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Min(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4)">
            <summary>
            Returns a vector that contains the lowest value from each matching pair of components.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Min(DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@)">
            <summary>
            Returns a vector that contains the lowest value from each matching pair of components.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] The minimized vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Max(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4)">
            <summary>
            Returns a vector that contains the highest value from each matching pair of components.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Max(DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@)">
            <summary>
            Returns a vector that contains the highest value from each matching pair of components.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] The maximized vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Clamp(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Clamp(DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value1">The value to clamp.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <param name="result">[OutAttribute] The clamped value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Lerp(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4,System.Single)">
            <summary>
            Performs a linear interpolation between two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of value2.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Lerp(DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@,System.Single,DogSE.Library.Maths.Vector4@)">
            <summary>
            Performs a linear interpolation between two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of value2.</param>
            <param name="result">[OutAttribute] The result of the interpolation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Barycentric(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4,System.Single,System.Single)">
            <summary>
            Returns a Vector4 containing the 4D Cartesian coordinates of a point specified in barycentric (areal) coordinates relative to a 4D triangle.
            </summary>
            <param name="value1">A Vector4 containing the 4D Cartesian coordinates of vertex 1 of the triangle.</param>
            <param name="value2">A Vector4 containing the 4D Cartesian coordinates of vertex 2 of the triangle.</param>
            <param name="value3">A Vector4 containing the 4D Cartesian coordinates of vertex 3 of the triangle.</param>
            <param name="amount1">Barycentric coordinate b2, which expresses the weighting factor toward vertex 2 (specified in value2).</param>
            <param name="amount2">Barycentric coordinate b3, which expresses the weighting factor toward vertex 3 (specified in value3).</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Barycentric(DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@,System.Single,System.Single,DogSE.Library.Maths.Vector4@)">
            <summary>
            Returns a Vector4 containing the 4D Cartesian coordinates of a point specified in Barycentric (areal) coordinates relative to a 4D triangle.
            </summary>
            <param name="value1">A Vector4 containing the 4D Cartesian coordinates of vertex 1 of the triangle.</param>
            <param name="value2">A Vector4 containing the 4D Cartesian coordinates of vertex 2 of the triangle.</param>
            <param name="value3">A Vector4 containing the 4D Cartesian coordinates of vertex 3 of the triangle.</param>
            <param name="amount1">Barycentric coordinate b2, which expresses the weighting factor toward vertex 2 (specified in value2).</param>
            <param name="amount2">Barycentric coordinate b3, which expresses the weighting factor toward vertex 3 (specified in value3).</param>
            <param name="result">[OutAttribute] The 4D Cartesian coordinates of the specified point are placed in this Vector4 on exit.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.SmoothStep(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4,System.Single)">
            <summary>
            Interpolates between two values using a cubic equation.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <param name="amount">Weighting value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.SmoothStep(DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@,System.Single,DogSE.Library.Maths.Vector4@)">
            <summary>
            Interpolates between two values using a cubic equation.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">[OutAttribute] The interpolated value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.CatmullRom(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4,System.Single)">
            <summary>
            Performs a Catmull-Rom interpolation using the specified positions.
            </summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.CatmullRom(DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@,System.Single,DogSE.Library.Maths.Vector4@)">
            <summary>
            Performs a Catmull-Rom interpolation using the specified positions.
            </summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">[OutAttribute] A vector that is the result of the Catmull-Rom interpolation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Hermite(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4,System.Single)">
            <summary>
            Performs a Hermite spline interpolation.
            </summary>
            <param name="value1">Source position vector.</param>
            <param name="tangent1">Source tangent vector.</param>
            <param name="value2">Source position vector.</param>
            <param name="tangent2">Source tangent vector.</param>
            <param name="amount">Weighting factor.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Hermite(DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@,System.Single,DogSE.Library.Maths.Vector4@)">
            <summary>
            Performs a Hermite spline interpolation.
            </summary>
            <param name="value1">Source position vector.</param>
            <param name="tangent1">Source tangent vector.</param>
            <param name="value2">Source position vector.</param>
            <param name="tangent2">Source tangent vector.</param>
            <param name="amount">Weighting factor.</param>
            <param name="result">[OutAttribute] The result of the Hermite spline interpolation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Transform(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Matrix)">
            <summary>
            Transforms a Vector2 by the given Matrix.
            </summary>
            <param name="position">The source Vector2.</param>
            <param name="matrix">The transformation Matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Transform(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Vector4@)">
            <summary>
            Transforms a Vector2 by the given Matrix.
            </summary>
            <param name="position">The source Vector2.</param>
            <param name="matrix">The transformation Matrix.</param>
            <param name="result">[OutAttribute] The Vector4 resulting from the transformation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Transform(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Matrix)">
            <summary>
            Transforms a Vector3 by the given Matrix.
            </summary>
            <param name="position">The source Vector3.</param>
            <param name="matrix">The transformation Matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Transform(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Vector4@)">
            <summary>
            Transforms a Vector3 by the given Matrix.
            </summary>
            <param name="position">The source Vector3.</param>
            <param name="matrix">The transformation Matrix.</param>
            <param name="result">[OutAttribute] The Vector4 resulting from the transformation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Transform(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Matrix)">
            <summary>
            Transforms a Vector4 by the specified Matrix.
            </summary>
            <param name="vector">The source Vector4.</param>
            <param name="matrix">The transformation Matrix.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Transform(DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Vector4@)">
            <summary>
            Transforms a Vector4 by the given Matrix.
            </summary>
            <param name="vector">The source Vector4.</param>
            <param name="matrix">The transformation Matrix.</param>
            <param name="result">[OutAttribute] The Vector4 resulting from the transformation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Transform(DogSE.Library.Maths.Vector2,DogSE.Library.Maths.Quaternion)">
            <summary>
            Transforms a Vector2 by a specified Quaternion into a Vector4.
            </summary>
            <param name="value">The Vector2 to transform.</param>
            <param name="rotation">The Quaternion rotation to apply.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Transform(DogSE.Library.Maths.Vector2@,DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Vector4@)">
            <summary>
            Transforms a Vector2 by a specified Quaternion into a Vector4.
            </summary>
            <param name="value">The Vector2 to transform.</param>
            <param name="rotation">The Quaternion rotation to apply.</param>
            <param name="result">[OutAttribute] The Vector4 resulting from the transformation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Transform(DogSE.Library.Maths.Vector3,DogSE.Library.Maths.Quaternion)">
            <summary>
            Transforms a Vector3 by a specified Quaternion into a Vector4.
            </summary>
            <param name="value">The Vector3 to transform.</param>
            <param name="rotation">The Quaternion rotation to apply.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Transform(DogSE.Library.Maths.Vector3@,DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Vector4@)">
            <summary>
            Transforms a Vector3 by a specified Quaternion into a Vector4.
            </summary>
            <param name="value">The Vector3 to transform.</param>
            <param name="rotation">The Quaternion rotation to apply.</param>
            <param name="result">[OutAttribute] The Vector4 resulting from the transformation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Transform(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Quaternion)">
            <summary>
            Transforms a Vector4 by a specified Quaternion.
            </summary>
            <param name="value">The Vector4 to transform.</param>
            <param name="rotation">The Quaternion rotation to apply.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Transform(DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Vector4@)">
            <summary>
            Transforms a Vector4 by a specified Quaternion.
            </summary>
            <param name="value">The Vector4 to transform.</param>
            <param name="rotation">The Quaternion rotation to apply.</param>
            <param name="result">[OutAttribute] The Vector4 resulting from the transformation.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Transform(DogSE.Library.Maths.Vector4[],DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Vector4[])">
            <summary>
            Transforms an array of Vector4s by a specified Matrix.
            </summary>
            <param name="sourceArray">The array of Vector4s to transform.</param>
            <param name="matrix">The transform Matrix to apply.</param>
            <param name="destinationArray">The existing destination array into which the transformed Vector4s are written.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Transform(DogSE.Library.Maths.Vector4[],System.Int32,DogSE.Library.Maths.Matrix@,DogSE.Library.Maths.Vector4[],System.Int32,System.Int32)">
            <summary>
            Transforms a specified range in an array of Vector4s by a specified Matrix into a specified range in a destination array.
            </summary>
            <param name="sourceArray">The array of Vector4s containing the range to transform.</param>
            <param name="sourceIndex">The index in the source array of the first Vector4 to transform.</param>
            <param name="matrix">The transform Matrix to apply.</param>
            <param name="destinationArray">The existing destination array of Vector4s into which to write the results.</param>
            <param name="destinationIndex">The index in the destination array of the first result Vector4 to write.</param>
            <param name="length">The number of Vector4s to transform.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Transform(DogSE.Library.Maths.Vector4[],DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Vector4[])">
            <summary>
            Transforms an array of Vector4s by a specified Quaternion.
            </summary>
            <param name="sourceArray">The array of Vector4s to transform.</param>
            <param name="rotation">The Quaternion rotation to apply.</param>
            <param name="destinationArray">The existing destination array into which the transformed Vector4s are written.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Transform(DogSE.Library.Maths.Vector4[],System.Int32,DogSE.Library.Maths.Quaternion@,DogSE.Library.Maths.Vector4[],System.Int32,System.Int32)">
            <summary>
            Transforms a specified range in an array of Vector4s by a specified Quaternion into a specified range in a destination array.
            </summary>
            <param name="sourceArray">The array of Vector4s containing the range to transform.</param>
            <param name="sourceIndex">The index in the source array of the first Vector4 to transform.</param>
            <param name="rotation">The Quaternion rotation to apply.</param>
            <param name="destinationArray">The existing destination array of Vector4s into which to write the results.</param>
            <param name="destinationIndex">The index in the destination array of the first result Vector4 to write.</param>
            <param name="length">The number of Vector4s to transform.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Negate(DogSE.Library.Maths.Vector4)">
            <summary>
            Returns a vector pointing in the opposite direction.
            </summary>
            <param name="value">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Negate(DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@)">
            <summary>
            Returns a vector pointing in the opposite direction.
            </summary>
            <param name="value">Source vector.</param>
            <param name="result">[OutAttribute] Vector pointing in the opposite direction.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Add(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Add(DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] Sum of the source vectors.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Subtract(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Subtract(DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] The result of the subtraction.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Multiply(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Multiply(DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
            <param name="result">[OutAttribute] The result of the multiplication.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Multiply(DogSE.Library.Maths.Vector4,System.Single)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="scaleFactor">Scalar value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Multiply(DogSE.Library.Maths.Vector4@,System.Single,DogSE.Library.Maths.Vector4@)">
            <summary>
            Multiplies a vector by a scalar value.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="scaleFactor">Scalar value.</param>
            <param name="result">[OutAttribute] The result of the multiplication.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Divide(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4)">
            <summary>
            Divides the components of a vector by the components of another vector.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Divisor vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Divide(DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@,DogSE.Library.Maths.Vector4@)">
            <summary>
            Divides the components of a vector by the components of another vector.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">The divisor.</param>
            <param name="result">[OutAttribute] The result of the division.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Divide(DogSE.Library.Maths.Vector4,System.Single)">
            <summary>
            Divides a vector by a scalar value.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="divider">The divisor.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Divide(DogSE.Library.Maths.Vector4@,System.Single,DogSE.Library.Maths.Vector4@)">
            <summary>
            Divides a vector by a scalar value.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="divider">The divisor.</param>
            <param name="result">[OutAttribute] The result of the division.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.op_UnaryNegation(DogSE.Library.Maths.Vector4)">
            <summary>
            Returns a vector pointing in the opposite direction.
            </summary>
            <param name="value">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.op_Equality(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4)">
            <summary>
            Tests vectors for equality.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.op_Inequality(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4)">
            <summary>
            Tests vectors for inequality.
            </summary>
            <param name="value1">Vector to compare.</param>
            <param name="value2">Vector to compare.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.op_Addition(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.op_Subtraction(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4)">
            <summary>
            Subtracts a vector from a vector.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.op_Multiply(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4)">
            <summary>
            Multiplies the components of two vectors by each other.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.op_Multiply(DogSE.Library.Maths.Vector4,System.Single)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="scaleFactor">Scalar value.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.op_Multiply(System.Single,DogSE.Library.Maths.Vector4)">
            <summary>
            Multiplies a vector by a scalar.
            </summary>
            <param name="scaleFactor">Scalar value.</param>
            <param name="value1">Source vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.op_Division(DogSE.Library.Maths.Vector4,DogSE.Library.Maths.Vector4)">
            <summary>
            Divides the components of a vector by the components of another vector.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="value2">Divisor vector.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.op_Division(DogSE.Library.Maths.Vector4,System.Single)">
            <summary>
            Divides a vector by a scalar value.
            </summary>
            <param name="value1">Source vector.</param>
            <param name="divider">The divisor.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.op_Explicit(DogSE.Library.Maths.Vector3)~DogSE.Library.Maths.Vector4">
            <summary>
            
            </summary>
            <param name="vector3"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.op_Explicit(DogSE.Library.Maths.Vector2)~DogSE.Library.Maths.Vector4">
            <summary>
            
            </summary>
            <param name="vector2"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.ToString">
            <summary>
            Retrieves a string representation of the current object.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a specified object.
            </summary>
            <param name="obj">Object with which to make the comparison.</param>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.GetHashCode">
            <summary>
            Gets the hash code of this object.
            </summary>
        </member>
        <member name="M:DogSE.Library.Maths.Vector4.Equals(DogSE.Library.Maths.Vector4)">
            <summary>
            Determines whether the specified Object is equal to the Vector4.
            </summary>
            <param name="other">The Vector4 to compare with the current Vector4.</param>
        </member>
        <member name="T:DogSE.Library.Serialize.EmptyLineBehavior">
            <summary>
                Determines how empty lines are interpreted when reading CSV files.
                These values do not affect empty lines that occur within quoted fields
                or empty lines that appear at the end of the input file.
            </summary>
            <remarks>
            code from http://www.blackbeltcoder.com/Articles/files/reading-and-writing-csv-files-in-c
            </remarks>
        </member>
        <member name="F:DogSE.Library.Serialize.EmptyLineBehavior.NoColumns">
            <summary>
                Empty lines are interpreted as a line with zero columns.
            </summary>
        </member>
        <member name="F:DogSE.Library.Serialize.EmptyLineBehavior.EmptyColumn">
            <summary>
                Empty lines are interpreted as a line with a single empty column.
            </summary>
        </member>
        <member name="F:DogSE.Library.Serialize.EmptyLineBehavior.Ignore">
            <summary>
                Empty lines are skipped over as though they did not exist.
            </summary>
        </member>
        <member name="F:DogSE.Library.Serialize.EmptyLineBehavior.EndOfFile">
            <summary>
                An empty line is interpreted as the end of the input file.
            </summary>
        </member>
        <member name="T:DogSE.Library.Serialize.CsvFileCommon">
            <summary>
                Common base class for CSV reader and writer classes.
            </summary>
        </member>
        <member name="F:DogSE.Library.Serialize.CsvFileCommon.SpecialChars">
            <summary>
                These are special characters in CSV files. If a column contains any
                of these characters, the entire column is wrapped in double quotes.
            </summary>
        </member>
        <member name="P:DogSE.Library.Serialize.CsvFileCommon.Delimiter">
            <summary>
                Gets/sets the character used for column delimiters.
            </summary>
        </member>
        <member name="P:DogSE.Library.Serialize.CsvFileCommon.Quote">
            <summary>
                Gets/sets the character used for column quotes.
            </summary>
        </member>
        <member name="T:DogSE.Library.Serialize.CsvFileReader">
            <summary>
                Class for reading from comma-separated-value (CSV) files
            </summary>
        </member>
        <member name="M:DogSE.Library.Serialize.CsvFileReader.#ctor(System.IO.Stream,DogSE.Library.Serialize.EmptyLineBehavior)">
            <summary>
                Initializes a new instance of the CsvFileReader class for the
                specified stream.
            </summary>
            <param name="stream">The stream to read from</param>
            <param name="emptyLineBehavior">Determines how empty lines are handled</param>
        </member>
        <member name="M:DogSE.Library.Serialize.CsvFileReader.#ctor(System.String,DogSE.Library.Serialize.EmptyLineBehavior)">
            <summary>
                Initializes a new instance of the CsvFileReader class for the
                specified file path.
            </summary>
            <param name="path">The name of the CSV file to read from</param>
            <param name="emptyLineBehavior">Determines how empty lines are handled</param>
        </member>
        <member name="M:DogSE.Library.Serialize.CsvFileReader.Dispose">
            <summary>
                Propagate Dispose to StreamReader
            </summary>
        </member>
        <member name="M:DogSE.Library.Serialize.CsvFileReader.ReadRow(System.Collections.Generic.List{System.String})">
            <summary>
                Reads a row of columns from the current CSV file. Returns false if no
                more data could be read because the end of the file was reached.
            </summary>
            <param name="columns">Collection to hold the columns read</param>
        </member>
        <member name="M:DogSE.Library.Serialize.CsvFileReader.ReadQuotedColumn">
            <summary>
                Reads a quoted column by reading from the current line until a
                closing quote is found or the end of the file is reached. On return,
                the current position points to the delimiter or the end of the last
                line in the file. Note: CurrLine may be set to null on return.
            </summary>
        </member>
        <member name="M:DogSE.Library.Serialize.CsvFileReader.ReadUnquotedColumn">
            <summary>
                Reads an unquoted column by reading from the current line until a
                delimiter is found or the end of the line is reached. On return, the
                current position points to the delimiter or the end of the current
                line.
            </summary>
        </member>
        <member name="T:DogSE.Library.Serialize.CsvFileWriter">
            <summary>
                Class for writing to comma-separated-value (CSV) files.
            </summary>
        </member>
        <member name="M:DogSE.Library.Serialize.CsvFileWriter.#ctor(System.IO.Stream)">
            <summary>
                Initializes a new instance of the CsvFileWriter class for the
                specified stream.
            </summary>
            <param name="stream">The stream to write to</param>
        </member>
        <member name="M:DogSE.Library.Serialize.CsvFileWriter.#ctor(System.String)">
            <summary>
                Initializes a new instance of the CsvFileWriter class for the
                specified file path.
            </summary>
            <param name="path">The name of the CSV file to write to</param>
        </member>
        <member name="M:DogSE.Library.Serialize.CsvFileWriter.Dispose">
            <summary>
                Propagate Dispose to StreamReader
            </summary>
        </member>
        <member name="M:DogSE.Library.Serialize.CsvFileWriter.WriteRow(System.Collections.Generic.List{System.String})">
            <summary>
                Writes a row of columns to the current CSV file.
            </summary>
            <param name="columns">The list of columns to write</param>
        </member>
        <member name="M:DogSE.Library.Serialize.CsvFileWriter.Flush">
            <summary>
            刷新数据
            </summary>
        </member>
        <member name="T:DogSE.Library.Serialize.CSVSerializeUtil">
            <summary>
            CSV 文件序列化
            </summary>
        </member>
        <member name="M:DogSE.Library.Serialize.CSVSerializeUtil.CSVDeserialize(System.String,System.Type)">
            <summary>
            将csv文件反序列化到对象数组里
            </summary>
            <param name="csvStr"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="F:DogSE.Library.Serialize.CSVSerializeUtil.CurrentLine">
            <summary>
            当前正在处理的列
            </summary>
        </member>
        <member name="M:DogSE.Library.Serialize.CSVSerializeUtil.GetPropertyByAliases(System.Type,System.String)">
            <summary>
            通过别名或者列属性
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Serialize.CSVSerializeUtil.IsListEnum(System.Type)">
            <summary>
            释放时List&lt;枚举&gt;
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Serialize.CSVSerializeUtil.CSVDeserialize``1(System.String)">
            <summary>
            CSV 反序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="csvStr">csv的字符串</param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Serialize.CSVSerializeUtil.CSVDeserializeFile``1(System.String)">
            <summary>
            CSV 反序列一个文件
            </summary>
            <typeparam name="T"></typeparam>
            <param name="csvFileName">某个csv的文件</param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Serialize.CSVSerializeUtil.CSVSerialize``1(``0[])">
            <summary>
            序列化到csv字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="values"></param>
        </member>
        <member name="T:DogSE.Library.Serialize.CSVColumnAttribute">
            <summary>
            给一个csv的列定义一个别名
            </summary>
        </member>
        <member name="M:DogSE.Library.Serialize.CSVColumnAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name">别名</param>
        </member>
        <member name="P:DogSE.Library.Serialize.CSVColumnAttribute.Aliases">
            <summary>
            别名
            </summary>
        </member>
        <member name="T:DogSE.Library.Serialize.XmlSerializeUtil">
            <summary>
            xml序列化辅助类
            </summary>
        </member>
        <member name="M:DogSE.Library.Serialize.XmlSerializeUtil.XmlDeserialize``1(System.String)">
            <summary>
            Xml 反序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xmlStr"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Serialize.XmlSerializeUtil.XmlDeserialize(System.String,System.Type)">
            <summary>
            Xml 反序列化
            </summary>
            <param name="xmlStr"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Serialize.XmlSerializeUtil.XmlSerialize``1(``0)">
            <summary>
            将一个对象序列化为一个xml对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:DogSE.Library.Time.OneServer">
            <summary>
            暂时用这个来获得全部时间，稍后会对它的获取方法做调整
            </summary>
        </member>
        <member name="P:DogSE.Library.Time.OneServer.NowTime">
            <summary>
            服务器当前的时间
            </summary>
        </member>
        <member name="M:DogSE.Library.Time.OneServer.GetServerTime">
            <summary>
            获得服务器时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Time.OneServer.SetServerTime(System.DateTime)">
            <summary>
            设置服务器时间
            </summary>
            <param name="serverTime"></param>
        </member>
        <member name="T:DogSE.Library.Util.ConvertString">
            <summary>
            
            </summary>
        </member>
        <member name="F:DogSE.Library.Util.ConvertString.s_UTF8">
            <summary>
            
            </summary>
        </member>
        <member name="P:DogSE.Library.Util.ConvertString.UTF8">
            <summary>
            Safe UTF8
            </summary>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ToBoolean(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ConvertToBoolean(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ToSingle(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ConvertToSingle(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ToDouble(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ConvertToDouble(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ToTimeSpan(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ConvertToTimeSpan(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ToDateTime(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ConvertToDateTime(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ToInt16(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ConvertToInt16(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ToUInt16(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ConvertToUInt16(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ToInt32(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ConvertToInt32(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ToUInt32(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ConvertToUInt32(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ToLong64(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ConvertToLong64(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ToULong64(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ConvertToULong64(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ToIPAddress(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ConvertToIPAddress(System.String)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ToByteArray(System.String)">
            <summary>
            字符串转换成字节数组
            </summary>
            <param name="byteString"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ToByteArray(System.String,System.Text.Encoding)">
            <summary>
            字符串转换成字节数组
            </summary>
            <param name="byteString"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.Concat(System.Text.StringBuilder@,System.String[])">
            <summary>
            合并字符串
            </summary>
            <param name="stringBuilder"></param>
            <param name="strStringList"></param>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.Coalition(System.String,System.Text.StringBuilder@,System.String)">
            <summary>
            合并字符串
            </summary>
            <param name="strString"></param>
            <param name="stringBuilder"></param>
            <param name="strString2"></param>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.Coalition(System.String,System.Text.StringBuilder@,System.String,System.String)">
            <summary>
            合并字符串
            </summary>
            <param name="strString"></param>
            <param name="stringBuilder"></param>
            <param name="strString2"></param>
            <param name="strString3"> </param>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.Coalition(System.String,System.Text.StringBuilder@,System.String,System.String,System.String)">
            <summary>
            合并字符串
            </summary>
            <param name="strString"></param>
            <param name="stringBuilder"></param>
            <param name="strString2"></param>
            <param name="strString3"></param>
            <param name="strString4"></param>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ToCSVSplit(System.String)">
            <summary>
            将 1,2,3 转换为字符串数组
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ToCSVSplitToInt(System.String)">
            <summary>
            将 1,2,3 转换为字符串数组
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ConvertToCSV(System.Collections.Generic.List{System.String})">
            <summary>
            将字符串列表转为csv格式数据
            </summary>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ConvertToCSV(System.Collections.Generic.List{System.Int32})">
            <summary>
            将字符串列表转为csv格式数据
            </summary>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ConvertToCSV(System.Int32[])">
            <summary>
            将字符串列表转为csv格式数据
            </summary>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.HasUtf8FourWord(System.String)">
            <summary>
            字符串里是否包含4字节的字符
            </summary>
            <remarks>
            代码来源：http://www.cnblogs.com/yangxudong/p/3737593.html
            </remarks>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.ConvertString.ReplaceUtf8FourWord(System.String)">
            <summary>
            替换utf8不识别的超过4个字符的字母
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:DogSE.Library.Util.Insensitive">
            <summary>
            不敏感的字符串大小写比较的类
            </summary>
        </member>
        <member name="F:DogSE.Library.Util.Insensitive.s_Comparer">
            <summary>
            初始化不敏感的字符串大小写比较的接口
            </summary>
        </member>
        <member name="P:DogSE.Library.Util.Insensitive.Comparer">
            <summary>
            返回不敏感的字符串大小写比较的接口
            </summary>
        </member>
        <member name="M:DogSE.Library.Util.Insensitive.Compare(System.String,System.String)">
            <summary>
            不敏感的字符串大小写比较
            </summary>
        </member>
        <member name="M:DogSE.Library.Util.Insensitive.Equals(System.String,System.String)">
            <summary>
            不敏感的字符串比较是否相同
            </summary>
        </member>
        <member name="M:DogSE.Library.Util.Insensitive.StartsWith(System.String,System.String)">
            <summary>
            不敏感的字符串比较第一个字符串前几个字符是否和第二个字符串的完全相同
            </summary>
        </member>
        <member name="M:DogSE.Library.Util.Insensitive.EndsWith(System.String,System.String)">
            <summary>
            不敏感的字符串比较第一个字符串后几个字符是否和第二个字符串的完全相同
            </summary>
        </member>
        <member name="M:DogSE.Library.Util.Insensitive.Contains(System.String,System.String)">
            <summary>
            不敏感的字符串比较第一个字符串是否完全包容第二个字符串
            </summary>
        </member>
        <member name="T:DogSE.Library.Util.Lang">
            <summary>
            服务器端的翻译语言处理模块
            </summary>
        </member>
        <member name="M:DogSE.Library.Util.Lang.InitLangString(System.String)">
            <summary>
            初始化翻译文件
            </summary>
            <param name="xmlStr"></param>
        </member>
        <member name="M:DogSE.Library.Util.Lang.InitLangFile(System.String)">
            <summary>
            初始化制定的翻译文件
            </summary>
            <param name="xmlFile"></param>
        </member>
        <member name="P:DogSE.Library.Util.Lang.DictCount">
            <summary>
            字典里包含翻译的数量
            </summary>
        </member>
        <member name="M:DogSE.Library.Util.Lang.Init(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            初始化（临时用）
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:DogSE.Library.Util.Lang.ReloadFile">
            <summary>
            重新加载文件
            </summary>
        </member>
        <member name="M:DogSE.Library.Util.Lang.Trans(System.String)">
            <summary>
            将一个语言翻译为目标语言
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.Lang.TransFormat(System.String,System.Object[])">
            <summary>
            将一个语言翻译为目标语言（带格式化输出）
            </summary>
            <param name="source"></param>
            <param name="objParams"></param>
            <returns></returns>
        </member>
        <member name="T:DogSE.Library.Util.RandomEx">
            <summary>
            
            </summary>
        </member>
        <member name="F:DogSE.Library.Util.RandomEx.s_Random">
            <summary>
            
            </summary>
        </member>
        <member name="M:DogSE.Library.Util.RandomEx.RandomDouble">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.RandomEx.RandomBool">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.RandomEx.Random(System.Int32)">
            <summary>
            
            </summary>
            <param name="iMaxValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.RandomEx.RandomArray``1(``0[])">
            <summary>
            
            </summary>
            <param name="arrayT"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.RandomEx.RandomList``1(System.Collections.Generic.List{``0})">
            <summary>
            
            </summary>
            <param name="listT"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.RandomEx.RandomInBytes(System.Byte[]@)">
            <summary>
            
            </summary>
            <param name="bufferRandom"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.RandomEx.RandomMinMax(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="iMinValue"></param>
            <param name="iMaxValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.RandomEx.Random(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="iBaseValue"></param>
            <param name="iAppendMaxValue"></param>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.RandomEx.IsTriggerProbability1000(System.Int32)">
            <summary>
            千分比的触发几率
            </summary>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.RandomEx.IsTriggerProbability100(System.Int32)">
            <summary>
            百分比的触发几率
            </summary>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.RandomEx.IsTriggerProbability10(System.Int32)">
            <summary>
            十分比的触发几率
            </summary>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.RandomEx.RandomBitInUint(System.Byte,System.Byte)">
            <summary>
            随机数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.RandomEx.RandomBitInUshort(System.Byte,System.Byte)">
            <summary>
            随机数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.RandomEx.RandomBitInByte(System.Byte,System.Byte)">
            <summary>
            随机数
            </summary>
            <returns></returns>
        </member>
        <member name="M:DogSE.Library.Util.RandomEx.IsTriggerProbability100(System.Double)">
            <summary>
            注意，这个是小数的随机数哦
            允许传0.001之类的值
            </summary>
            <param name="percent"></param>
            <returns></returns>
        </member>
        <member name="T:DogSE.Library.Util.CONVERT_FLOAT_INT_UINT">
            <summary>
            
            </summary>
        </member>
        <member name="F:DogSE.Library.Util.CONVERT_FLOAT_INT_UINT.uiUint">
            <summary>
            
            </summary>
        </member>
        <member name="F:DogSE.Library.Util.CONVERT_FLOAT_INT_UINT.iInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:DogSE.Library.Util.CONVERT_FLOAT_INT_UINT.fFloat">
            <summary>
            
            </summary>
        </member>
        <member name="T:DogSE.Library.Util.CONVERT_DOUBLE_LONG_ULONG">
            <summary>
            
            </summary>
        </member>
        <member name="F:DogSE.Library.Util.CONVERT_DOUBLE_LONG_ULONG.ulUlong">
            <summary>
            
            </summary>
        </member>
        <member name="F:DogSE.Library.Util.CONVERT_DOUBLE_LONG_ULONG.lLong">
            <summary>
            
            </summary>
        </member>
        <member name="F:DogSE.Library.Util.CONVERT_DOUBLE_LONG_ULONG.dDouble">
            <summary>
            
            </summary>
        </member>
        <member name="T:DogSE.Common.MathHelper">
            <summary>
            Contains commonly used precalculated values.
            </summary>
        </member>
        <member name="F:DogSE.Common.MathHelper.E">
            <summary>
            Represents the mathematical constant e.
            </summary>
        </member>
        <member name="F:DogSE.Common.MathHelper.Log10E">
            <summary>
            Represents the log base ten of e.
            </summary>
        </member>
        <member name="F:DogSE.Common.MathHelper.Log2E">
            <summary>
            Represents the log base two of e.
            </summary>
        </member>
        <member name="F:DogSE.Common.MathHelper.Pi">
            <summary>
            Represents the value of pi.
            </summary>
        </member>
        <member name="F:DogSE.Common.MathHelper.PiOver2">
            <summary>
            Represents the value of pi divided by two.
            </summary>
        </member>
        <member name="F:DogSE.Common.MathHelper.PiOver4">
            <summary>
            Represents the value of pi divided by four.
            </summary>
        </member>
        <member name="F:DogSE.Common.MathHelper.TwoPi">
            <summary>
            Represents the value of pi times two.
            </summary>
        </member>
        <member name="M:DogSE.Common.MathHelper.Barycentric(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns the Cartesian coordinate for one axis of a point that is defined by a given triangle and two normalized barycentric (areal) coordinates.
            </summary>
            <param name="value1">The coordinate on one axis of vertex 1 of the defining triangle.</param>
            <param name="value2">The coordinate on the same axis of vertex 2 of the defining triangle.</param>
            <param name="value3">The coordinate on the same axis of vertex 3 of the defining triangle.</param>
            <param name="amount1">The normalized barycentric (areal) coordinate b2, equal to the weighting factor for vertex 2, the coordinate of which is specified in value2.</param>
            <param name="amount2">The normalized barycentric (areal) coordinate b3, equal to the weighting factor for vertex 3, the coordinate of which is specified in value3.</param>
        </member>
        <member name="M:DogSE.Common.MathHelper.CatmullRom(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Performs a Catmull-Rom interpolation using the specified positions.
            </summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
        </member>
        <member name="M:DogSE.Common.MathHelper.Clamp(System.Single,System.Single,System.Single)">
            <summary>
            Restricts a value to be within a specified range. Reference page contains links to related code samples.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value. If value is less than min, min will be returned.</param>
            <param name="max">The maximum value. If value is greater than max, max will be returned.</param>
        </member>
        <member name="M:DogSE.Common.MathHelper.Distance(System.Single,System.Single)">
            <summary>
            Calculates the absolute value of the difference of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
        </member>
        <member name="M:DogSE.Common.MathHelper.Hermite(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Performs a Hermite spline interpolation.
            </summary>
            <param name="value1">Source position.</param>
            <param name="tangent1">Source tangent.</param>
            <param name="value2">Source position.</param>
            <param name="tangent2">Source tangent.</param>
            <param name="amount">Weighting factor.</param>
        </member>
        <member name="M:DogSE.Common.MathHelper.Lerp(System.Single,System.Single,System.Single)">
            <summary>
            Linearly interpolates between two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of value2.</param>
        </member>
        <member name="M:DogSE.Common.MathHelper.Max(System.Single,System.Single)">
            <summary>
            Returns the greater of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
        </member>
        <member name="M:DogSE.Common.MathHelper.Min(System.Single,System.Single)">
            <summary>
            Returns the lesser of two values.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
        </member>
        <member name="M:DogSE.Common.MathHelper.SmoothStep(System.Single,System.Single,System.Single)">
            <summary>
            Interpolates between two values using a cubic equation.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <param name="amount">Weighting value.</param>
        </member>
        <member name="M:DogSE.Common.MathHelper.ToDegrees(System.Single)">
            <summary>
            Converts radians to degrees.
            </summary>
            <param name="radians">The angle in radians.</param>
        </member>
        <member name="M:DogSE.Common.MathHelper.ToRadians(System.Single)">
            <summary>
            Converts degrees to radians.
            </summary>
            <param name="degrees">The angle in degrees.</param>
        </member>
        <member name="M:DogSE.Common.MathHelper.WrapAngle(System.Single)">
            <summary>
            Reduces a given angle to a value between π and -π.
            </summary>
            <param name="angle">The angle to reduce, in radians.</param>
        </member>
    </members>
</doc>
